[{"D:\\BilgeAdam\\backoffice\\src\\index.js":"1","D:\\BilgeAdam\\backoffice\\src\\App.js":"2","D:\\BilgeAdam\\backoffice\\src\\reportWebVitals.js":"3","D:\\BilgeAdam\\backoffice\\src\\contextApi\\contextApi.js":"4","D:\\BilgeAdam\\backoffice\\src\\components\\login\\login.js":"5","D:\\BilgeAdam\\backoffice\\src\\components\\header\\header.js":"6","D:\\BilgeAdam\\backoffice\\src\\contextApi\\ContextApi.js":"7","D:\\BilgeAdam\\backoffice\\src\\components\\media\\CreateMedia.js":"8","D:\\BilgeAdam\\backoffice\\src\\components\\header\\Header.js":"9","D:\\BilgeAdam\\backoffice\\src\\components\\login\\Login.js":"10","D:\\BilgeAdam\\backoffice\\src\\services\\MediaService.js":"11","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\CreateWaiter.js":"12","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\ListWaiter.js":"13","D:\\BilgeAdam\\backoffice\\src\\services\\WaiterService.js":"14","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\EditWaiter.js":"15","D:\\BilgeAdam\\backoffice\\src\\components\\place\\ListPlaces.js":"16","D:\\BilgeAdam\\backoffice\\src\\services\\PlaceService.js":"17","D:\\BilgeAdam\\backoffice\\src\\components\\place\\CreatePlace.js":"18","D:\\BilgeAdam\\backoffice\\src\\components\\place\\EditPlace.js":"19","D:\\BilgeAdam\\backoffice\\src\\components\\info\\Info.js":"20","D:\\BilgeAdam\\backoffice\\src\\services\\InfoService.js":"21","D:\\BilgeAdam\\backoffice\\src\\components\\category\\CreateCategory.js":"22","D:\\BilgeAdam\\backoffice\\src\\services\\CategoryService.js":"23","D:\\BilgeAdam\\backoffice\\src\\components\\category\\ListCategory.js":"24","D:\\BilgeAdam\\backoffice\\src\\components\\category\\EditCategory.js":"25","D:\\BilgeAdam\\backoffice\\src\\components\\product\\CreateProduct.js":"26","D:\\BilgeAdam\\backoffice\\src\\services\\ProductService.js":"27","D:\\BilgeAdam\\backoffice\\src\\components\\product\\ListProduct.js":"28","D:\\BilgeAdam\\backoffice\\src\\components\\product\\EditProduct.js":"29","D:\\BilgeAdam\\backoffice\\src\\components\\role\\CreateRole.js":"30","D:\\BilgeAdam\\backoffice\\src\\services\\RoleService.js":"31","D:\\BilgeAdam\\backoffice\\src\\components\\role\\ListRole.js":"32","D:\\BilgeAdam\\backoffice\\src\\components\\role\\EditRole.js":"33","D:\\BilgeAdam\\backoffice\\src\\components\\user\\CreateUser.js":"34","D:\\BilgeAdam\\backoffice\\src\\services\\UserService.js":"35","D:\\BilgeAdam\\backoffice\\src\\components\\user\\ListUser.js":"36","D:\\BilgeAdam\\backoffice\\src\\components\\user\\EditUser.js":"37","D:\\BilgeAdam\\backoffice\\src\\components\\loading\\Loading.js":"38","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\index.js":"39","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\reportWebVitals.js":"40","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\App.js":"41","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\contextApi\\ContextApi.js":"42","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\media\\CreateMedia.js":"43","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\waiter\\CreateWaiter.js":"44","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\header\\Header.js":"45","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\waiter\\ListWaiter.js":"46","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\waiter\\EditWaiter.js":"47","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\place\\ListPlaces.js":"48","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\login\\Login.js":"49","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\place\\EditPlace.js":"50","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\info\\Info.js":"51","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\place\\CreatePlace.js":"52","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\category\\ListCategory.js":"53","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\category\\EditCategory.js":"54","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\product\\CreateProduct.js":"55","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\product\\EditProduct.js":"56","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\category\\CreateCategory.js":"57","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\product\\ListProduct.js":"58","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\role\\ListRole.js":"59","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\role\\CreateRole.js":"60","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\role\\EditRole.js":"61","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\user\\CreateUser.js":"62","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\user\\EditUser.js":"63","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\user\\ListUser.js":"64","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\WaiterService.js":"65","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\InfoService.js":"66","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\MediaService.js":"67","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\CategoryService.js":"68","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\ProductService.js":"69","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\PlaceService.js":"70","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\UserService.js":"71","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\RoleService.js":"72","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\loading\\Loading.js":"73","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\customer\\CreateCustomer.js":"74","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\CustomerService.js":"75","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\customer\\ListCustomer.js":"76","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\customer\\EditCustomer.js":"77","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\Natifications.js":"78"},{"size":563,"mtime":1608065594487,"results":"79","hashOfConfig":"80"},{"size":3094,"mtime":1608533571870,"results":"81","hashOfConfig":"80"},{"size":362,"mtime":499162500000,"results":"82","hashOfConfig":"80"},{"size":962,"mtime":1608099382809,"results":"83","hashOfConfig":"80"},{"size":2057,"mtime":1608071630471,"results":"84","hashOfConfig":"80"},{"size":2576,"mtime":1608101467038,"results":"85","hashOfConfig":"80"},{"size":1044,"mtime":1608485776509,"results":"86","hashOfConfig":"80"},{"size":3924,"mtime":1608491386771,"results":"87","hashOfConfig":"80"},{"size":2832,"mtime":1608482276661,"results":"88","hashOfConfig":"80"},{"size":3653,"mtime":1608484169657,"results":"89","hashOfConfig":"80"},{"size":658,"mtime":1608375159922,"results":"90","hashOfConfig":"80"},{"size":4721,"mtime":1608410561318,"results":"91","hashOfConfig":"80"},{"size":3830,"mtime":1608535055194,"results":"92","hashOfConfig":"80"},{"size":1471,"mtime":1608492717682,"results":"93","hashOfConfig":"80"},{"size":6060,"mtime":1608489872032,"results":"94","hashOfConfig":"80"},{"size":2951,"mtime":1608535025597,"results":"95","hashOfConfig":"80"},{"size":1449,"mtime":1608375159925,"results":"96","hashOfConfig":"80"},{"size":2168,"mtime":1608402761406,"results":"97","hashOfConfig":"80"},{"size":2729,"mtime":1608489496933,"results":"98","hashOfConfig":"80"},{"size":3007,"mtime":1608488843713,"results":"99","hashOfConfig":"80"},{"size":654,"mtime":1608492992234,"results":"100","hashOfConfig":"80"},{"size":3998,"mtime":1608411800098,"results":"101","hashOfConfig":"80"},{"size":1546,"mtime":1608375159914,"results":"102","hashOfConfig":"80"},{"size":3341,"mtime":1608535038887,"results":"103","hashOfConfig":"80"},{"size":4565,"mtime":1608489889161,"results":"104","hashOfConfig":"80"},{"size":6507,"mtime":1608415004640,"results":"105","hashOfConfig":"80"},{"size":1681,"mtime":1608455965967,"results":"106","hashOfConfig":"80"},{"size":4941,"mtime":1608534221909,"results":"107","hashOfConfig":"80"},{"size":7966,"mtime":1608489516489,"results":"108","hashOfConfig":"80"},{"size":1827,"mtime":1608457039073,"results":"109","hashOfConfig":"80"},{"size":1482,"mtime":1608375159928,"results":"110","hashOfConfig":"80"},{"size":3016,"mtime":1608489774524,"results":"111","hashOfConfig":"80"},{"size":2461,"mtime":1608489880520,"results":"112","hashOfConfig":"80"},{"size":4453,"mtime":1608459151116,"results":"113","hashOfConfig":"80"},{"size":1850,"mtime":1608375159957,"results":"114","hashOfConfig":"80"},{"size":3786,"mtime":1608490023716,"results":"115","hashOfConfig":"80"},{"size":6007,"mtime":1608489954046,"results":"116","hashOfConfig":"80"},{"size":441,"mtime":1608491838945,"results":"117","hashOfConfig":"80"},{"size":563,"mtime":1608065594487,"results":"118","hashOfConfig":"119"},{"size":362,"mtime":499162500000,"results":"120","hashOfConfig":"119"},{"size":3659,"mtime":1609083059619,"results":"121","hashOfConfig":"119"},{"size":1126,"mtime":1609137787572,"results":"122","hashOfConfig":"119"},{"size":3924,"mtime":1608491386771,"results":"123","hashOfConfig":"119"},{"size":4721,"mtime":1608410561318,"results":"124","hashOfConfig":"119"},{"size":3640,"mtime":1609137786965,"results":"125","hashOfConfig":"119"},{"size":3830,"mtime":1608535055194,"results":"126","hashOfConfig":"119"},{"size":6060,"mtime":1608489872032,"results":"127","hashOfConfig":"119"},{"size":2897,"mtime":1609006661345,"results":"128","hashOfConfig":"119"},{"size":3653,"mtime":1608484169657,"results":"129","hashOfConfig":"119"},{"size":3946,"mtime":1609136114434,"results":"130","hashOfConfig":"119"},{"size":4649,"mtime":1609336201694,"results":"131","hashOfConfig":"119"},{"size":4734,"mtime":1609326944333,"results":"132","hashOfConfig":"119"},{"size":3459,"mtime":1608640581278,"results":"133","hashOfConfig":"119"},{"size":4246,"mtime":1609006614488,"results":"134","hashOfConfig":"119"},{"size":6507,"mtime":1608415004640,"results":"135","hashOfConfig":"119"},{"size":7966,"mtime":1608489516489,"results":"136","hashOfConfig":"119"},{"size":3998,"mtime":1608411800098,"results":"137","hashOfConfig":"119"},{"size":6067,"mtime":1608792893316,"results":"138","hashOfConfig":"119"},{"size":3016,"mtime":1608489774524,"results":"139","hashOfConfig":"119"},{"size":1827,"mtime":1608457039073,"results":"140","hashOfConfig":"119"},{"size":2461,"mtime":1608489880520,"results":"141","hashOfConfig":"119"},{"size":4453,"mtime":1608459151116,"results":"142","hashOfConfig":"119"},{"size":6007,"mtime":1608489954046,"results":"143","hashOfConfig":"119"},{"size":3786,"mtime":1608490023716,"results":"144","hashOfConfig":"119"},{"size":1471,"mtime":1608492717682,"results":"145","hashOfConfig":"119"},{"size":910,"mtime":1609335746211,"results":"146","hashOfConfig":"119"},{"size":658,"mtime":1608375159922,"results":"147","hashOfConfig":"119"},{"size":1546,"mtime":1608375159914,"results":"148","hashOfConfig":"119"},{"size":2032,"mtime":1608668787784,"results":"149","hashOfConfig":"119"},{"size":1449,"mtime":1608375159925,"results":"150","hashOfConfig":"119"},{"size":1850,"mtime":1608375159957,"results":"151","hashOfConfig":"119"},{"size":1482,"mtime":1608375159928,"results":"152","hashOfConfig":"119"},{"size":441,"mtime":1608491838945,"results":"153","hashOfConfig":"119"},{"size":5028,"mtime":1609137971710,"results":"154","hashOfConfig":"119"},{"size":1777,"mtime":1609138039664,"results":"155","hashOfConfig":"119"},{"size":6636,"mtime":1609311764443,"results":"156","hashOfConfig":"119"},{"size":5759,"mtime":1609136474514,"results":"157","hashOfConfig":"119"},{"size":535,"mtime":1609086086717,"results":"158","hashOfConfig":"119"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"1orjukh",{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"161"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"161"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"161"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"161"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"161"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"161"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"161"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"161"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"161"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"161"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"161"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"161"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"161"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"161"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"161"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"161"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"161"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"161"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"161"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"161"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},"poaokt",{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"258"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"258"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"258"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"258"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"258"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"258"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"258"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"258"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"258"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"258"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"258"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"258"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"258"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"258"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"258"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"258"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"258"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"258"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"258"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"258"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"258"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"258"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"258"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"258"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"258"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"258"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"349","usedDeprecatedRules":"258"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},"D:\\BilgeAdam\\backoffice\\src\\index.js",[],["352","353"],"D:\\BilgeAdam\\backoffice\\src\\App.js",["354"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport './App.css';\nimport ContextProvider from './contextApi/ContextApi';\nimport LoginComponent from './components/login/Login';\nimport HeaderComponent from './components/header/Header';\nimport MediaComponent from './components/media/CreateMedia';\nimport CreateWaiterComponent from './components/waiter/CreateWaiter';\nimport ListWaiterComponent from './components/waiter/ListWaiter';\nimport EditWaiterComponent from './components/waiter/EditWaiter';\nimport ListPlace from \"./components/place/ListPlaces\";\nimport CreatePlace from \"./components/place/CreatePlace\";\nimport EditPlace from \"./components/place/EditPlace\";\nimport Info from \"./components/info/Info\";\nimport CreateCategory from \"./components/category/CreateCategory\";\nimport ListCategory from \"./components/category/ListCategory\";\nimport EditCategory from \"./components/category/EditCategory\";\nimport CreateProduct from \"./components/product/CreateProduct\";\nimport ListProduct from \"./components/product/ListProduct\";\nimport EditProduct from \"./components/product/EditProduct\";\nimport CreateRole from \"./components/role/CreateRole\";\nimport ListRole from \"./components/role/ListRole\";\nimport EditRole from \"./components/role/EditRole\";\nimport CreateUser from \"./components/user/CreateUser\";\nimport ListUser from \"./components/user/ListUser\";\nimport EditUser from \"./components/user/EditUser\";\nfunction App() {\n  return (\n    <ContextProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/update-user\" component={EditUser}></Route>\n          <Route path=\"/user\" component={ListUser}></Route>\n          <Route path=\"/add-user\" component={CreateUser}></Route>\n          <Route path=\"/update-role\" component={EditRole}></Route>\n          <Route path=\"/add-role\" component={CreateRole}></Route>\n          <Route path=\"/role\" component={ListRole}></Route>\n          <Route path=\"/update-product\" component={EditProduct}></Route>\n          <Route path=\"/product\" component={ListProduct}></Route>\n          <Route path=\"/add-product\" component={CreateProduct}></Route>\n          <Route path=\"/update-category\" component={EditCategory}></Route>\n          <Route path=\"/category\" component={ListCategory}></Route>\n          <Route path=\"/add-category\" component={CreateCategory}></Route>\n          <Route path=\"/info\" component={Info}></Route>\n          <Route path=\"/update-place\" component={EditPlace}></Route>\n          <Route path=\"/place\" component={ListPlace}></Route>\n          <Route path=\"/add-place\" component={CreatePlace}></Route>\n          <Route path=\"/media\" component={MediaComponent}></Route>\n          <Route path=\"/waiter\" component={ListWaiterComponent}></Route>\n          <Route path=\"/add-waiter\" component={CreateWaiterComponent}></Route>\n          <Route path=\"/update-waiter\" component={EditWaiterComponent}></Route>\n          <Route path=\"/\" component={LoginComponent}></Route>\n          <Route path=\"/login\" component={LoginComponent}></Route>\n\n        </Switch>\n\n\n      </Router>\n\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","D:\\BilgeAdam\\backoffice\\src\\reportWebVitals.js",[],"D:\\BilgeAdam\\backoffice\\src\\contextApi\\contextApi.js",["355","356"],"D:\\BilgeAdam\\backoffice\\src\\components\\login\\login.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\header\\header.js",["357"],"D:\\BilgeAdam\\backoffice\\src\\contextApi\\ContextApi.js",["358","359","360","361"],"import { createContext, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport const Context = createContext();\r\n\r\nconst ContextProvider = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        username: '', password: ''\r\n    })\r\n    const { username, password } = user;\r\n    const login = async (username, password) => {\r\n        const res = await axios.get(\"http://localhost:8080/user/login\", {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n\r\n        });\r\n        if (res.status == '200') {\r\n\r\n            setUser({ username: username, password:password});\r\n\r\n            // history.push(\"/category\");\r\n\r\n        } else {\r\n            console.log(\"hatalı giriş\");\r\n        }\r\n\r\n        return res;\r\n    }\r\n    return (\r\n\r\n        <Context.Provider value={{ user, login }}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n\r\n}\r\nexport default ContextProvider;","D:\\BilgeAdam\\backoffice\\src\\components\\media\\CreateMedia.js",["362","363","364","365"],"import { useEffect, useState, useRef } from 'react';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst CreateMedia = () => {\r\n\r\n    const ref = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [media, setMedia] = useState({\r\n        name: '', selectedFile: null, medias: []\r\n    })\r\n\r\n    const { name, selectedFile, medias } = media;\r\n\r\n    const uploadMedia = async (e) => {\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('file', selectedFile);\r\n        data.append('fileName', name);\r\n\r\n        await MediaService.createMedia(data).then(res => {\r\n            if (res.status = '200') {\r\n                ref.current.value = '';\r\n                setMedia({ ...media, selectedFile: null, name: '' });\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    const onNameChange = (e) => {\r\n\r\n        setMedia({ ...media, name: e.target.value });\r\n\r\n    }\r\n    const onFileChange = (e) => {\r\n\r\n        setMedia({ ...media, selectedFile: e.target.files[0] });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getMedias();\r\n\r\n    }, [selectedFile]);\r\n\r\n    async function getMedias() {\r\n        const res = await MediaService.getMedias();\r\n        setMedia({ ...media, medias: res.data });\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card\" style={{ height: \"40rem\" }}>\r\n                                    <h4 style={{ paddingLeft: 20 }}>Media Add</h4>\r\n                                    <div className=\"card-body\">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label>File :</label>\r\n                                            <input type=\"file\" name=\"selectedFile\" ref={ref} style={{ paddingTop: 20 }} onChange={(e) => onFileChange(e)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>File Name :</label>\r\n                                            <input placeholder=\"File Name\" name=\"name\" className=\"form-control\"\r\n                                                value={name} onChange={onNameChange} />\r\n                                        </div>\r\n                                        <button className=\"btn btn-success\" onClick={uploadMedia}>Save</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <div className=\"card\" style={{ height: \"40rem\", overflow: \"auto\" }}>\r\n                                    <h4 style={{ paddingLeft: 20 }}>Media List</h4>\r\n                                    <div className=\"row\">\r\n\r\n                                        {\r\n                                            medias.map(\r\n                                                media =>\r\n                                                    <div className=\"card-body col-4\">\r\n                                                        <img src={'data:image/png;base64,' + media.fileContent} width=\"150\" />\r\n                                                    </div>\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\nexport default CreateMedia;","D:\\BilgeAdam\\backoffice\\src\\components\\header\\Header.js",["366","367","368","369","370","371","372","373","374","375"],"import { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n\r\n    function logout(e) {\r\n        e.preventDefault();\r\n        history.push(\"/\")\r\n\r\n\r\n    }\r\n    function goPage(url){\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                <a className=\"navbar-brand\" href=\"#\">Admin Control</a>\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" onClick={()=>goPage(\"/product\")} href=\"#\" >Products<span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/user\")}>Users</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/category\")}>Categories</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/place\")} >Places</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/waiter\")} >Waiter</a>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\"  onClick={()=>goPage(\"/user\")} >Reports</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/role\")} >Roles</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/media\")} >Media</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/info\")} >Info</a>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={logout}>Logout</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Header;","D:\\BilgeAdam\\backoffice\\src\\components\\login\\Login.js",["376","377"],"import { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../contextApi/ContextApi';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const { login } = useContext(Context);\r\n\r\n    const [user, setUser] = useState({\r\n\r\n        username: '', password: ''\r\n    })\r\n    const [checked, setChecked] = useState(false);\r\n    const { username, password } = user;\r\n\r\n    const onChange = (e) => {\r\n\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n    const loginApi =  async (e) => { \r\n        e.preventDefault();\r\n        console.log('girdi1');\r\n       const res = await login(username, password);\r\n       \r\n       console.log(res)\r\n       \r\n       if(res.status=='200'){\r\n           \r\n            if (checked === true) {\r\n                let remember = { username: username, password: password }\r\n                localStorage.setItem(\"rememberMe\", JSON.stringify(remember));\r\n            } else {\r\n                localStorage.removeItem(\"rememberMe\");\r\n            }\r\n            history.push(`/product`)\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n    }\r\n    const changeCheckedHandler = (event) => {\r\n        setChecked(event.target.checked);\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"rememberMe\") !== null) {\r\n\r\n            const rememberMe = JSON.parse(localStorage.getItem(\"rememberMe\"));\r\n            setUser({ ...user, username: rememberMe.username, password: rememberMe.password });\r\n        }\r\n    }, [])\r\n    const loadCheckBox = () => {\r\n\r\n        const checkbox = [];\r\n        if (localStorage.getItem(\"rememberMe\") !== null) {\r\n\r\n            checkbox.push(\r\n                <label><input type=\"checkbox\" defaultChecked=\"true\" onChange={changeCheckedHandler} />Remember Me</label>\r\n            );\r\n\r\n\r\n\r\n        } else {\r\n\r\n            checkbox.push(\r\n                <label><input type=\"checkbox\" onChange={changeCheckedHandler} />Remember Me</label>\r\n            );\r\n        }\r\n        return checkbox;\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"login-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Login</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label> Username </label>\r\n                                        <input placeholder=\"username\" name=\"username\" className=\"form-control\"\r\n                                            value={username} onChange={(e) => onChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label> Password </label>\r\n                                        <input type=\"password\" placeholder=\"password\" name=\"password\" className=\"form-control\"\r\n                                            value={password} onChange={(e) => onChange(e)} />\r\n                                    </div>\r\n                                    {loadCheckBox()}\r\n                                    <br /> <button className=\"btn btn-success\" onClick={loginApi}>Login</button>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","D:\\BilgeAdam\\backoffice\\src\\services\\MediaService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\CreateWaiter.js",["378","379"],"import { useEffect, useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MediaService from '../../services/MediaService';\r\nimport WaiterService from '../../services/WaiterService';\r\nimport HeaderComponent from '../header/Header';\r\nconst CreateWaite = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [waiter, setWaiter] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        age: 0,\r\n        medias: [],\r\n        image: []\r\n    });\r\n\r\n    const { name, email, phone, age, medias, image } = waiter;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getImages();\r\n\r\n    }, []);\r\n\r\n    async function getImages() {\r\n        const res = await MediaService.getMedias()\r\n        await setWaiter({ ...waiter, medias: res.data, image: res.data[0] });\r\n\r\n    }\r\n\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/waiter')\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setWaiter({ ...waiter, [e.target.name]: e.target.value });\r\n    }\r\n    const onChangeImage = (e) => {\r\n        setWaiter({ ...waiter, image: medias[e.target.value] });\r\n    }\r\n\r\n    const saveWaiter = async (e) => {\r\n        \r\n        e.preventDefault();\r\n        await WaiterService.createWaiter(waiter);\r\n        history.push('/waiter');\r\n        \r\n    }\r\n    return (\r\n        <>\r\n\r\n        <div>\r\n        <HeaderComponent/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Waiter</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Name :</label>\r\n                                    <input placeholder=\"Waiter Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Age :</label>\r\n                                    <input placeholder=\"Waiter Age\" name=\"age\" className=\"form-control\"\r\n                                        value={age} onChange={onChange} type=\"number\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Email :</label>\r\n                                    <input placeholder=\"Waiter Email\" name=\"email\" className=\"form-control\"\r\n                                        value={email} onChange={onChange} type=\"email\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Phone :</label>\r\n                                    <input placeholder=\"Waiter Phone\" name=\"phone\" className=\"form-control\"\r\n                                        value={phone} onChange={onChange} type=\"number\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e)=>saveWaiter(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={()=>cancel} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        </>)\r\n}\r\nexport default CreateWaite;","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\ListWaiter.js",["380","381","382"],"D:\\BilgeAdam\\backoffice\\src\\services\\WaiterService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\EditWaiter.js",["383","384","385","386","387","388","389"],"import { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MediaService from '../../services/MediaService';\r\nimport WaiterService from '../../services/WaiterService';\r\nimport HeaderComponent from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditWaiter = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [waiter, setWaiter] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        age: 0,\r\n        imageId: history.location.state?.imageId,\r\n        medias: [],\r\n        image: []\r\n    });\r\n\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    const { id, name, email, phone, age, imageId, image } = waiter;\r\n\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getData(id);\r\n\r\n    }, []);\r\n\r\n    async function getData(id) {\r\n\r\n        const media = await MediaService.getMedias();\r\n        if (media.status == '200') {\r\n            setMedias(media.data);\r\n        }\r\n\r\n        const res = await WaiterService.getWaiterById(id);\r\n        if (res.status == '200') {\r\n            const info = res.data;\r\n            setWaiter({\r\n                ...waiter,\r\n                id: info.id,\r\n                name: info.name,\r\n                email: info.email,\r\n                phone: info.phone,\r\n                age: info.age,\r\n                image: info.image,\r\n\r\n            });\r\n\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    async function updateWaiter(e) {\r\n        e.preventDefault();\r\n\r\n        let waiter = { id: id, name: name, email: email, phone: phone, age: age, image: image };\r\n\r\n        await WaiterService.updateWaiter(waiter)\r\n        history.push('/waiter');\r\n\r\n\r\n    }\r\n    const cancel = (e) => {\r\n        e.preventDefault();\r\n        history.push('/waiter')\r\n    }\r\n\r\n    const onChangeInputs = (e) => {\r\n        setWaiter({ ...waiter, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setWaiter({ ...waiter, image: medias[e.target.value] });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <HeaderComponent />\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className=\"text-canter\">Edit Waiter</h3>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Name :</label>\r\n                                            <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                                                value={name} onChange={onChangeInputs} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Age :</label>\r\n                                            <input placeholder=\"Age\" name=\"age\" className=\"form-control\"\r\n                                                value={age} onChange={onChangeInputs} type=\"number\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Email :</label>\r\n                                            <input placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                                value={email} onChange={onChangeInputs} type=\"email\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Phone :</label>\r\n                                            <input placeholder=\"name\" name=\"name\" className=\"form-control\"\r\n                                                value={phone} onChange={onChangeInputs} type=\"number\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Image :</label>\r\n                                            <select\r\n                                                className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                                {\r\n                                                    medias.map(\r\n                                                        (media, index) =>\r\n\r\n                                                            <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                            {showImage()}\r\n\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-success\" onClick={(e) => updateWaiter(e)}>Save</button>\r\n                                        <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={(e) => cancel(e)} >Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default EditWaiter;\r\n","D:\\BilgeAdam\\backoffice\\src\\components\\place\\ListPlaces.js",["390","391","392"],"D:\\BilgeAdam\\backoffice\\src\\services\\PlaceService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\place\\CreatePlace.js",["393"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlaceService from '../../services/PlaceService';\r\nimport Header from '../header/Header';\r\n\r\nconst CreatePlace = () => {\r\n    const history = useHistory();\r\n    const [place, setPlace] = useState({\r\n        name: '', tableCount: 0\r\n    })\r\n    const { name, tableCount } = place;\r\n\r\n    const onChangeHandler=(e)=> {\r\n        setPlace({ ...place, [e.target.name]: e.target.value });\r\n    }\r\n    const savePlace=()=> {\r\n        PlaceService.createPlace(place);\r\n        history.push(`/place`);\r\n    }\r\n \r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Category</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Place Name :</label>\r\n                                    <input placeholder=\"Place Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Table Count :</label>\r\n                                    <input placeholder=\"Table Count\" name=\"tableCount\" className=\"form-control\"\r\n                                        value={tableCount} onChange={onChangeHandler} />\r\n                                </div>\r\n\r\n\r\n                                <button className=\"btn btn-success\" onClick={()=>savePlace()}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={()=>history.push(`/place`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>)\r\n}\r\nexport default CreatePlace;","D:\\BilgeAdam\\backoffice\\src\\components\\place\\EditPlace.js",["394","395"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlaceService from '../../services/PlaceService';\r\nimport Loading from '../loading/Loading';\r\n\r\n\r\nconst EditPlace = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [place, setPlace] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        tableCount: 0\r\n    });\r\n\r\n    const { id, name, tableCount } = place;\r\n\r\n    const onChangeHandler = (e) => {\r\n        setPlace({ ...place, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const editPlace = () => {\r\n        PlaceService.updatePlace(place);\r\n        history.push(`/place`);\r\n    }\r\n    useEffect(() => {\r\n        console.log('girdi'+id);\r\n        getPlaceById();\r\n    }, [])\r\n\r\n    async function getPlaceById() {\r\n        const res = await PlaceService.getPlaceById(id);\r\n       await setPlace({\r\n            ...place,\r\n            name: res.data.name,\r\n            tableCount: res.data.tableCount\r\n        });\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <div>\r\n            {loading==true? <Loading/> :\r\n           <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Place</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Place Name :</label>\r\n                                    <input placeholder=\"Place Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Table Count :</label>\r\n                                    <input placeholder=\"Table Count\" name=\"tableCount\" className=\"form-control\"\r\n                                        value={tableCount} onChange={onChangeHandler} />\r\n                                </div>\r\n\r\n\r\n                                <button className=\"btn btn-success\" onClick={() => editPlace()}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/place`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default EditPlace;","D:\\BilgeAdam\\backoffice\\src\\components\\info\\Info.js",["396","397"],"import { useEffect, useState } from 'react';\r\nimport InfoService from '../../services/InfoService'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst Info = () => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    const [info, setInfo] = useState([]);\r\n    const [profile, setProfile] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getData();\r\n\r\n    }, []);\r\n    async function getData() {\r\n        const resInfo = await InfoService.getInfo();\r\n        setInfo(resInfo.data);\r\n        const resProfile = await InfoService.getProfileInfo();\r\n        await setProfile(resProfile.data);\r\n        setLoading(false);\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n          {loading==true? <Loading/> :\r\n           <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Properties Info</h2>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Key</th>\r\n                                <th>Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                info.map(\r\n                                    info =>\r\n                                        <tr >\r\n                                            <td >{info.key}</td>\r\n                                            <td >{info.value}</td>\r\n\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <h2 className=\"text-center\">Profile Info</h2>\r\n                    <table className=\"table table-striped table bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Key</th>\r\n                                <th>Value</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                profile.map(\r\n                                    profile =>\r\n                                        <tr >\r\n                                            <td >{profile.key}</td>\r\n                                            <td >{profile.value}</td>\r\n\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            }\r\n        </>\r\n        )\r\n}\r\nexport default Info;","D:\\BilgeAdam\\backoffice\\src\\services\\InfoService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\category\\CreateCategory.js",["398","399"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nconst CreateCategory = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [category, setCategory] = useState({\r\n        name: '',\r\n        description: '',\r\n        image: []\r\n    });\r\n\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    const { name, description, image } = category;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        \r\n        getMedias();\r\n\r\n    }, []);\r\n    \r\n    async function getMedias() {\r\n        \r\n        const res = await MediaService.getMedias();\r\n\r\n        await setMedias(res.data);\r\n\r\n        setCategory({ ...category, image: res.data[0] });\r\n\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    }\r\n   \r\n    const onChangeImage = (e) => {\r\n        setCategory({ ...category, image: medias[e.target.value] });\r\n    }\r\n\r\n    const saveCategory = async (e) => {\r\n        e.preventDefault();\r\n        await CategoryService.createCategory(category);\r\n        history.push(`/category`);\r\n    }\r\n\r\n    const showImage =  () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Category</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Name :</label>\r\n                                    <input placeholder=\"Category Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Description :</label>\r\n                                    <input placeholder=\"Category Description\" name=\"description\" className=\"form-control\"\r\n                                        value={description} onChange={onChangeHandler} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e) => saveCategory(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/category`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>)\r\n}\r\nexport default CreateCategory;","D:\\BilgeAdam\\backoffice\\src\\services\\CategoryService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\category\\ListCategory.js",["400","401","402","403"],"D:\\BilgeAdam\\backoffice\\src\\components\\category\\EditCategory.js",["404","405","406","407"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditCategory = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    const [category, setCategory] = useState({\r\n\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        description: '',\r\n        imageId: history.location.state?.imageId,\r\n        image: []\r\n\r\n    });\r\n\r\n    const { id, name, description, image, imageId } = category;\r\n\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }   \r\n        getData();\r\n\r\n    }, []);\r\n\r\n    async function getData(){\r\n\r\n        const res = await CategoryService.getCategoryById(id);\r\n        const resMedias = await MediaService.getMedias();\r\n       \r\n        await setMedias(resMedias.data);\r\n        await setCategory({\r\n            ...category,\r\n            name: res.data.name,\r\n            description: res.data.description,\r\n            image: res.data.image,\r\n            imageId: history.location.state?.imageId\r\n        });\r\n        setLoading(false);\r\n\r\n              \r\n    }\r\n \r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n    const onChangeHandler = (e) => {\r\n\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setCategory({ ...category, image: medias[e.target.value] });\r\n    }\r\n\r\n    const updateCategory = async (e) => {\r\n        e.preventDefault();\r\n        await CategoryService.updateCategory(category);\r\n        history.push(`/category`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading==true? <Loading/> :\r\n           <div>\r\n            <Header/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Category</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Name :</label>\r\n                                    <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Description :</label>\r\n                                    <input placeholder=\"Category\" name=\"description\" className=\"form-control\"\r\n                                        value={description} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-success\" onClick={(e) => updateCategory(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/category`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>)\r\n}\r\nexport default EditCategory;","D:\\BilgeAdam\\backoffice\\src\\components\\product\\CreateProduct.js",["408","409","410","411"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProductService from '../../services/ProductService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport CategoryService from '../../services/CategoryService';\r\n\r\n\r\nconst CreateProduct = () => {\r\n    const history = useHistory();\r\n    const [product, setProduct] = useState({\r\n        name: '',\r\n        description: '',\r\n        categoryId: 0,\r\n        salesPrice: 0,\r\n        purchasePrice: 0,\r\n        image: []\r\n    });\r\n    const { name, description, categoryId, salesPrice, purchasePrice, image } = product;\r\n\r\n    const [multiCategories, setMultiCategories] = useState([]);\r\n    const [medias, setMedias] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getMedias();\r\n        getCategories();\r\n\r\n    }, []);\r\n\r\n    async function getMedias() {\r\n\r\n        const res = await MediaService.getMedias();\r\n\r\n        await setMedias(res.data);\r\n\r\n        setProduct({ ...product, image: res.data[0] });\r\n\r\n    }\r\n    async function getCategories(){\r\n        const res = await CategoryService.getCategory();\r\n        setCategories(res.data);\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setProduct({ ...product, image: medias[e.target.value] });\r\n    }\r\n    const changeMultiCate = (id) => {\r\n        if (multiCategories.includes(id) !== true) {\r\n            multiCategories.push(id);\r\n        } else {\r\n            for (let i = 0; i < multiCategories.length; i++) {\r\n                if (id === multiCategories[i]) {\r\n                    multiCategories.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const saveProduct = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let product = {\r\n            name: name, description: description, category: multiCategories,\r\n            salesPrice: salesPrice, purchasePrice: purchasePrice,image:image\r\n        };\r\n\r\n       await ProductService.createProduct(product);\r\n       history.push('/product');\r\n    }\r\n    const showImage =  () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    return (<div>\r\n        <Header />\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <h3 className=\"text-canter\">Add Product</h3>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Name :</label>\r\n                                <input placeholder=\"Product Name\" name=\"name\" className=\"form-control\"\r\n                                    value={name} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Description :</label>\r\n                                <input placeholder=\"Product Description\" name=\"description\" className=\"form-control\"\r\n                                    value={description} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Category :</label>\r\n                                <div className=\"row col-md-12\">\r\n                                    <div className=\"checkbox\" style={{ height: \"10rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                        {\r\n                                            categories.map(\r\n                                                category =>\r\n                                                    <div className=\"row col-md -12\">\r\n                                                        <label><input type=\"checkbox\" value=\"\" onClick={() => changeMultiCate(category.id)} />{category.name}</label>\r\n                                                    </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Sales Price :</label>\r\n                                <input placeholder=\"Sales Price\" name=\"salesPrice\" className=\"form-control\"\r\n                                    value={salesPrice} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Purchase Price :</label>\r\n                                <input placeholder=\"Purchase Price\" name=\"purchasePrice\" className=\"form-control\"\r\n                                    value={purchasePrice} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Image :</label>\r\n                                <select\r\n                                    className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                    {\r\n                                        medias.map(\r\n                                            (media, index) =>\r\n\r\n                                                <option key={media.id} value={index}>{media.fileName}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                {showImage()}\r\n                            </div>\r\n                            <button className=\"btn btn-success\" onClick={(e) => saveProduct(e)}>Save</button>\r\n                            <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/product`)} >Cancel</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default CreateProduct;","D:\\BilgeAdam\\backoffice\\src\\services\\ProductService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\product\\ListProduct.js",["412","413","414","415","416","417"],"D:\\BilgeAdam\\backoffice\\src\\components\\product\\EditProduct.js",["418","419","420","421","422"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport ProductService from '../../services/ProductService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditProduct = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [product, setProduct] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        description: '',\r\n        categoryId: history.location.state?.catId,\r\n        salesPrice: 0,\r\n        purchasePrice: 0,\r\n        imageId: history.location.state?.imageId,\r\n        image: []\r\n    });\r\n    const { id, name, description, categoryId, salesPrice, purchasePrice, image, imageId } = product;\r\n\r\n    const [categoryIdList, setCategoryIdList] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    const changeMultiCate = (id) => {\r\n\r\n        if (categoryIdList.includes(id) !== true) {\r\n            categoryIdList.push(id);\r\n\r\n        } else {\r\n            for (let i = 0; i < categoryIdList.length; i++) {\r\n                if (id === categoryIdList[i]) {\r\n                    categoryIdList.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getData();\r\n    },[]);\r\n\r\n    const showImage = () => {\r\n        const html = [];\r\n        const images = image\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n    }\r\n    async function getData() {\r\n\r\n        const resMedia = await MediaService.getMedias();\r\n        await setMedias(resMedia.data);\r\n\r\n        const resProd = await ProductService.getProductById(id);\r\n        await setProduct({\r\n            ...product,\r\n            name: resProd.data.name,\r\n            description: resProd.data.description,\r\n            salesPrice: resProd.data.salesPrice,\r\n            purchasePrice: resProd.data.purchasePrice,\r\n            image: resProd.data.image\r\n\r\n        });\r\n        await setCategoryIdList(resProd.data.categoryIdList);\r\n        const resCat = await CategoryService.getCategory();\r\n      await  setCategories(resCat.data);\r\n      setLoading(false);\r\n\r\n\r\n    }\r\n\r\n    const onChangeHandler = (e) => { \r\n        console.log('girdi')   \r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setProduct({ ...product, image: medias[e.target.value] });\r\n    }\r\n    const updateProduct = async (e) => {\r\n        e.preventDefault();\r\n        let product = {\r\n            id: id, name: name, description: description,\r\n            salesPrice: salesPrice, purchasePrice: purchasePrice, categoryIdList: categoryIdList, image: image\r\n        };\r\n        await ProductService.updateProduct(product,0);\r\n        history.push(`/product`);\r\n    }\r\n    const checkBox = () => {\r\n\r\n        const multiSelect = [];\r\n        let info = false;\r\n        categories.forEach(category => {\r\n            categoryIdList.forEach(id => {\r\n                if (id === category.id) {\r\n                    multiSelect.push(\r\n                        <div className=\"row col-md -12\">\r\n                            <label><input type=\"checkbox\" onChange={() => changeMultiCate(category.id)} defaultChecked=\"true\" />{category.name}</label>\r\n                        </div>)\r\n                    info = true;\r\n                }\r\n            });\r\n\r\n\r\n            if (info === false) {\r\n\r\n                multiSelect.push(\r\n                    <div className=\"row col-md -12\">\r\n                        <label><input type=\"checkbox\" onChange={() => changeMultiCate(category.id)} />{category.name}</label>\r\n                    </div>)\r\n                info = true;\r\n\r\n            }\r\n            info = false;\r\n\r\n        });\r\n        return multiSelect;\r\n    }\r\n    return (\r\n        <div>\r\n            {loading==true? <Loading/> :\r\n           <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Product</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Product Name :</label>\r\n                                    <input placeholder=\"Product Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Product Description :</label>\r\n                                    <input placeholder=\"Product Description\" name=\"description\" className=\"form-control\"\r\n                                        value={description} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row col-md-12\">\r\n                                        <label>Product categories :</label>\r\n                                        <div className=\"checkbox  form-control\" style={{ height: \"6rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                            {checkBox()}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Sales Price :</label>\r\n                                    <input placeholder=\"Sales Price\" name=\"salesPrice\" className=\"form-control\"\r\n                                        value={salesPrice} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Purchase Price :</label>\r\n                                    <input placeholder=\"Purchase Price\" name=\"purchasePrice\" className=\"form-control\"\r\n                                        value={purchasePrice} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Product Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e) => updateProduct(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/product`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            }\r\n        </div>);\r\n}\r\nexport default EditProduct;","D:\\BilgeAdam\\backoffice\\src\\components\\role\\CreateRole.js",["423","424"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport Header from '../header/Header';\r\nconst CreateRole = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n\r\n\r\n    const changeNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const saveRole = async (e) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        const role = { name: name };\r\n        const res = await RoleService.createRole(role);\r\n        if(res.status=='200'){\r\n            history.push(`/role`);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Role</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Role Name :</label>\r\n                                    <input placeholder=\"Role Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={changeNameHandler} />\r\n                                </div>\r\n\r\n\r\n                                <button className=\"btn btn-success\" onClick={saveRole}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/role`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>);\r\n}\r\nexport default CreateRole;","D:\\BilgeAdam\\backoffice\\src\\services\\RoleService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\role\\ListRole.js",["425"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\n\r\nconst ListRole = () => {\r\n\r\n    const history = useHistory();\r\n    const [roles, setRoles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            this.props.history.push('')\r\n        }\r\n\r\n        getRoles();\r\n\r\n    }, []);\r\n    async function getRoles() {\r\n        const res = await RoleService.getRoles();\r\n        await setRoles(res.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    const editRole = (id) => {\r\n        history.push({\r\n            pathname: '/update-role',\r\n            state: {\r\n                id: id\r\n            }\r\n        });\r\n    }\r\n    const deleteRole = async (roleDTO) => {\r\n        await RoleService.deleteRole(roleDTO);\r\n        setRoles(roles.filter(role => role.id !== roleDTO.id))\r\n    }\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading/> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n\r\n                        <h2 className=\"text-center\">Role List</h2>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-primary\" onClick={() => history.push('/add-role')}>Add Role</button>\r\n                            <table className=\"table table-striped table bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Role Name</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        roles.map(\r\n                                            role =>\r\n                                                <tr key={role.id} >\r\n                                                    <td >{role.name}</td>\r\n                                                    <td >\r\n                                                        <button onClick={() => editRole(role.id)} className=\"btn btn-info\">Edit</button>\r\n                                                        <button style={{ marginLeft: \"10px\" }} onClick={() => deleteRole(role)} className=\"btn btn-danger\" >Delete</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>);\r\n}\r\nexport default ListRole;","D:\\BilgeAdam\\backoffice\\src\\components\\role\\EditRole.js",["426","427"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditRole = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [role, setRole] = useState({\r\n        id: history.location.state?.id,\r\n        name: ''\r\n    });\r\n    const { id, name } = role;\r\n\r\n    const changeNameHandler = (e) => {\r\n        setRole({ ...role, name: e.target.value });\r\n    }\r\n    const updateRole = async (e) => {\r\n        e.preventDefault();\r\n        await RoleService.updateRole(role);\r\n        history.push(`/role`);\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getRoleById();\r\n    }, []);\r\n\r\n    async function getRoleById() {\r\n        const res = await RoleService.getRoleById(id);\r\n        await setRole({ ...role, name: res.data.name });\r\n        setLoading(false);\r\n    }\r\n    return (<div>\r\n        {loading == true ? <Loading/> :\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-canter\">Edit Role</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Role Name :</label>\r\n                                        <input placeholder=\"Role Name\" name=\"name\" className=\"form-control\"\r\n                                            value={name} onChange={changeNameHandler} />\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={(e) => updateRole(e)}>Save</button>\r\n                                    <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/role`)} >Cancel</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>)\r\n}\r\nexport default EditRole;","D:\\BilgeAdam\\backoffice\\src\\components\\user\\CreateUser.js",["428"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport UserService from '../../services/UserService';\r\nimport Header from '../header/Header';\r\n\r\nconst CreateUser = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        userName: '',\r\n        password: '',\r\n        email:''\r\n    });\r\n\r\n    const { userName, password , email } = user\r\n    const [roleId] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getRoles();\r\n    }, []);\r\n    async function getRoles() {\r\n        const res = await RoleService.getRoles();\r\n        setRoles(res.data);\r\n    }\r\n    const saveUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = { userName: userName, password: password, rolesId: roleId ,enabled:true , email:email};\r\n\r\n        await UserService.createUser(user);\r\n        history.push('/user');\r\n    }\r\n    const onChangeHandler = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const changeMultiCate = (id) => {\r\n        if (roleId.includes(id) !== true) {\r\n            roleId.push(id);\r\n        } else {\r\n            for (let i = 0; i < roleId.length; i++) {\r\n                if (id === roleId[i]) {\r\n                    roleId.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add User</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Username :</label>\r\n                                    <input placeholder=\"Username\" name=\"userName\" className=\"form-control\"\r\n                                        value={userName} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Password :</label>\r\n                                    <input placeholder=\"Password\" name=\"password\" className=\"form-control\"\r\n                                        value={password} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email :</label>\r\n                                    <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                        value={email} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row col-md-12\">\r\n                                        <div className=\"checkbox\" style={{ height: \"10rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                            {\r\n                                                roles.map(\r\n                                                    role =>\r\n                                                        <div className=\"row col-md -12\">\r\n                                                            <label><input type=\"checkbox\" value=\"\" onClick={() => changeMultiCate(role.id)} />{role.name}</label>\r\n                                                        </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e) => saveUser(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push('/user')} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\nexport default CreateUser;","D:\\BilgeAdam\\backoffice\\src\\services\\UserService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\user\\ListUser.js",["429","430","431","432"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport UserService from '../../services/UserService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\nconst ListUser = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    async function getUsers() {\r\n        const res = await UserService.getUsers();\r\n        await setUsers(res.data);\r\n        setLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('');\r\n        }\r\n        getUsers();\r\n    }, []);\r\n    const editUser = (id) => {\r\n        history.push({\r\n            pathname: '/update-user',\r\n            state: {\r\n                id: id\r\n            }\r\n        });\r\n    }\r\n    const deleteUser = async (id) => {\r\n        await UserService.deleteUser(id);\r\n         setUsers(users.filter(user => user.id !== id));\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <h2 className=\"text-center\">User List</h2>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-primary\" onClick={() => history.push(`/add-user`)}>Add User</button>\r\n                            <table className=\"table table-striped table bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Username</th>\r\n                                        <th>Email</th>\r\n                                        <th>Role</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.map(\r\n                                            user =>\r\n                                                <tr key={user.id} >\r\n                                                    <td >{user.userName}</td>\r\n                                                    <td >{user.email}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            user.rolesList.map(\r\n                                                                role =>\r\n                                                                    <a href=\"#\">{role.name} </a>\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td >\r\n                                                        <button onClick={() => editUser(user.id)} className=\"btn btn-info\">Edit</button>\r\n                                                        <button style={{ marginLeft: \"10px\" }} onClick={() => deleteUser(user.id)} className=\"btn btn-danger\" >Delete</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ListUser;","D:\\BilgeAdam\\backoffice\\src\\components\\user\\EditUser.js",["433","434"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport UserService from '../../services/UserService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditUser = () => {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({\r\n        id: history.location.state?.id,\r\n        userName: '',\r\n        password: '',\r\n        email: ''\r\n    });\r\n    const [roleId, setRoleId] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [roles, setRoles] = useState([]);\r\n\r\n    const { id, userName, password, email } = user;\r\n\r\n    async function getData() {\r\n\r\n\r\n        const resUsers = await UserService.getUserById(id);\r\n        await setUser({\r\n            ...user,\r\n            userName: resUsers.data.userName,\r\n            password: resUsers.data.password,\r\n            email: resUsers.data.email,\r\n            enabled: resUsers.data.enabled,\r\n\r\n        });\r\n\r\n        setRoleId(resUsers.data.rolesId);\r\n\r\n        const res = await RoleService.getRoles();\r\n        await setRoles(res.data);\r\n        setLoading(false);\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getData();\r\n    }, []);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const changeMultiRole = (id) => {\r\n        if (roleId.includes(id) !== true) {\r\n            roleId.push(id);\r\n        } else {\r\n            for (let i = 0; i < roleId.length; i++) {\r\n                if (id === roleId[i]) {\r\n                    roleId.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = { id: id, userName: userName, password: password, rolesId: roleId, enabled: true, email: email };\r\n\r\n        UserService.updateUser(user).then(res => {\r\n            this.props.history.push('/user');\r\n\r\n        })\r\n    }\r\n\r\n    const checkBox = () => {\r\n        console.log(roleId);\r\n        const multiSelect = [];\r\n        let info = false;\r\n        roles.forEach(role => {\r\n            roleId.forEach(id => {\r\n                if (id === role.id) {\r\n                    multiSelect.push(\r\n                        <div className=\"row col-md -12\">\r\n                            <label><input type=\"checkbox\" onChange={() => changeMultiRole(role.id)} defaultChecked=\"true\" />{role.name}</label>\r\n                        </div>)\r\n                    info = true;\r\n                }\r\n            });\r\n\r\n\r\n            if (info === false) {\r\n\r\n                multiSelect.push(\r\n                    <div className=\"row col-md -12\">\r\n                        <label><input type=\"checkbox\" onChange={() => changeMultiRole(role.id)} />{role.name}</label>\r\n                    </div>)\r\n                info = true;\r\n\r\n            }\r\n            info = false;\r\n\r\n        });\r\n        return multiSelect;\r\n    }\r\n    return (\r\n        <div>\r\n            {loading == true ? <Loading/> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className=\"text-canter\">Edit User</h3>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Username :</label>\r\n                                            <input placeholder=\"Username\" name=\"name\" className=\"form-control\"\r\n                                                value={userName} onChange={onChangeHandler} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Password :</label>\r\n                                            <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"form-control\"\r\n                                                value={password} onChange={onChangeHandler} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email :</label>\r\n                                            <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                                value={email} onChange={onChangeHandler} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"row col-md-12\">\r\n                                                <div className=\"checkbox\" style={{ height: \"10rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                                    {\r\n                                                        checkBox()\r\n                                                    }\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <button className=\"btn btn-success\" onClick={(e) => updateUser(e)}>Save</button>\r\n                                        <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/user`)} >Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>)\r\n}\r\nexport default EditUser;","D:\\BilgeAdam\\backoffice\\src\\components\\loading\\Loading.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\index.js",[],["435","436"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\reportWebVitals.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\App.js",["437"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport './App.css';\nimport ContextProvider from './contextApi/ContextApi';\nimport LoginComponent from './components/login/Login';\nimport HeaderComponent from './components/header/Header';\nimport MediaComponent from './components/media/CreateMedia';\nimport CreateWaiterComponent from './components/waiter/CreateWaiter';\nimport ListWaiterComponent from './components/waiter/ListWaiter';\nimport EditWaiterComponent from './components/waiter/EditWaiter';\nimport ListPlace from \"./components/place/ListPlaces\";\nimport CreatePlace from \"./components/place/CreatePlace\";\nimport EditPlace from \"./components/place/EditPlace\";\nimport Info from \"./components/info/Info\";\nimport CreateCategory from \"./components/category/CreateCategory\";\nimport ListCategory from \"./components/category/ListCategory\";\nimport EditCategory from \"./components/category/EditCategory\";\nimport CreateProduct from \"./components/product/CreateProduct\";\nimport ListProduct from \"./components/product/ListProduct\";\nimport EditProduct from \"./components/product/EditProduct\";\nimport CreateRole from \"./components/role/CreateRole\";\nimport ListRole from \"./components/role/ListRole\";\nimport EditRole from \"./components/role/EditRole\";\nimport CreateUser from \"./components/user/CreateUser\";\nimport ListUser from \"./components/user/ListUser\";\nimport EditUser from \"./components/user/EditUser\";\nimport CreateCustomer from \"./components/customer/CreateCustomer\";\nimport ListCustomer from \"./components/customer/ListCustomer\";\nimport EditCustomer from \"./components/customer/EditCustomer\";\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer } from 'react-notifications';\nfunction App() {\n  return (\n    <ContextProvider>\n      <Router>\n        <Switch>\n        <Route path=\"/update-customer\" component={EditCustomer}></Route>\n          <Route path=\"/customers\" component={ListCustomer}></Route>\n          <Route path=\"/add-customer\" component={CreateCustomer}></Route>\n          <Route path=\"/update-user\" component={EditUser}></Route>\n          <Route path=\"/user\" component={ListUser}></Route>\n          <Route path=\"/add-user\" component={CreateUser}></Route>\n          <Route path=\"/update-role\" component={EditRole}></Route>\n          <Route path=\"/add-role\" component={CreateRole}></Route>\n          <Route path=\"/role\" component={ListRole}></Route>\n          <Route path=\"/update-product\" component={EditProduct}></Route>\n          <Route path=\"/product\" component={ListProduct}></Route>\n          <Route path=\"/add-product\" component={CreateProduct}></Route>\n          <Route path=\"/update-category\" component={EditCategory}></Route>\n          <Route path=\"/category\" component={ListCategory}></Route>\n          <Route path=\"/add-category\" component={CreateCategory}></Route>\n          <Route path=\"/info\" component={Info}></Route>\n          <Route path=\"/update-place\" component={EditPlace}></Route>\n          <Route path=\"/place\" component={ListPlace}></Route>\n          <Route path=\"/add-place\" component={CreatePlace}></Route>\n          <Route path=\"/media\" component={MediaComponent}></Route>\n          <Route path=\"/waiter\" component={ListWaiterComponent}></Route>\n          <Route path=\"/add-waiter\" component={CreateWaiterComponent}></Route>\n          <Route path=\"/update-waiter\" component={EditWaiterComponent}></Route>\n          <Route path=\"/\" component={LoginComponent}></Route>\n          <Route path=\"/login\" component={LoginComponent}></Route>\n          \n        </Switch>\n\n        <NotificationContainer />\n      </Router>\n\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\contextApi\\ContextApi.js",["438","439","440","441"],"import { createContext, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport const Context = createContext();\r\n\r\nconst ContextProvider = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        username: '', password: ''\r\n    });\r\n    const [language,setLanguage] = useState('en');\r\n    const { username, password } = user;\r\n    \r\n    const login = async (username, password) => {\r\n        const res = await axios.get(\"http://localhost:8080/user/login\", {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n\r\n        });\r\n        if (res.status == '200') {\r\n\r\n            setUser({ username: username, password:password});\r\n\r\n            // history.push(\"/category\");\r\n\r\n        } else {\r\n            console.log(\"hatalı giriş\");\r\n        }\r\n\r\n        return res;\r\n    }\r\n    return (\r\n\r\n        <Context.Provider value={{ user,language,setLanguage, login }}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n\r\n}\r\nexport default ContextProvider;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\media\\CreateMedia.js",["442","443","444","445"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\waiter\\CreateWaiter.js",["446","447"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\header\\Header.js",["448","449","450","451","452","453","454","455","456","457","458","459"],"import { useHistory } from \"react-router-dom\";\r\nimport { Context } from '../../contextApi/ContextApi';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../../contextApi/ContextApi';\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const { language,setLanguage } = useContext(Context);\r\n    function logout(e) {\r\n        e.preventDefault();\r\n        history.push(\"/\")\r\n\r\n\r\n    }\r\n    function goPage(url) {\r\n        history.push(url);\r\n    }\r\n\r\n    const onChangeLanguage = (e) => {\r\n        setLanguage(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                <a className=\"navbar-brand\" href=\"#\">Admin Control</a>\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" onClick={() => goPage(\"/product\")} href=\"#\" >Products<span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/user\")}>Users</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/category\")}>Categories</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/place\")} >Places</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/waiter\")} >Waiter</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/customers\")} >Customer</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/user\")} >Reports</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/role\")} >Roles</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/media\")} >Media</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={() => goPage(\"/info\")} >Info</a>\r\n                    </li>\r\n\r\n                </ul>\r\n                <ul class=\"nav navbar-nav navbar-right\">\r\n                    <select\r\n                        className=\"nav-item\" id=\"option\" onChange={onChangeLanguage} >\r\n                        <option key=\"1\"  value=\"en\" >English</option>\r\n                        <option key=\"1\"  value=\"tr\" >Turkish</option>\r\n                    </select>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={logout}>Logout</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Header;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\waiter\\ListWaiter.js",["460","461","462"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WaiterService from '../../services/WaiterService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst ListWaiter = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [waiters, setWaiters] = useState([]);\r\n\r\n    const addWaiter = () => {\r\n        history.push('add-waiter')\r\n    }\r\n\r\n    const deleteWaiter = async (waiterId) => {\r\n        await WaiterService.deleteWaiter(waiterId)\r\n        setWaiters(waiters.filter(waiter => waiter.id !== waiterId));\r\n\r\n    }\r\n    const editWaiter = (id, imageId) => {\r\n        history.push({\r\n            pathname: '/update-waiter',\r\n            state: {\r\n                id: id,\r\n                imageId: imageId\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getData();\r\n    }, []);\r\n    async function getData() {\r\n        const res = await WaiterService.getWaiters();\r\n        await setWaiters(res.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading/> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <h2 className=\"text-center\">Waiter List</h2>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-primary\" onClick={addWaiter}>Add Waiter</button>\r\n                            <table className=\"table table-striped table bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Waiter Name</th>\r\n                                        <th>Waiter Age</th>\r\n                                        <th>Waiter Email</th>\r\n                                        <th>Waiter Phone</th>\r\n                                        <th>Waiter Image</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        waiters.map(\r\n                                            waiter =>\r\n                                                <tr key={waiter.id} >\r\n                                                    <td >{waiter.name}</td>\r\n                                                    <td >{waiter.age}</td>\r\n                                                    <td >{waiter.email}</td>\r\n                                                    <td >{waiter.phone}</td>\r\n                                                    <td><img src={'data:image/png;base64,' + waiter.image.fileContent} style={{ borderRadius: \"10px\" }} width=\"50\" /></td>\r\n                                                    <td >\r\n                                                        <button onClick={() => editWaiter(waiter.id, waiter.image.id)} className=\"btn btn-info\">Edit</button>\r\n                                                        <button style={{ marginLeft: \"10px\" }} onClick={() => deleteWaiter(waiter.id)} className=\"btn btn-danger\" >Delete</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ListWaiter;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\waiter\\EditWaiter.js",["463","464","465","466","467","468","469"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\place\\ListPlaces.js",["470","471","472","473"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlaceService from '../../services/PlaceService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\nconst ListPlace = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [places, setPlaces] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem(\"username\")==null && localStorage.getItem(\"password\")==null){\r\n            history.push('')\r\n        }\r\n        getPlaces();\r\n    },[])\r\n\r\n    async function getPlaces() {\r\n        const res = await PlaceService.getPlaces();\r\n        \r\n        await setPlaces(res.data);\r\n        setLoading(false);\r\n    }\r\n   \r\n    const editPlace = (id,imageId) => {\r\n        history.push({\r\n            pathname: '/update-place',\r\n            state: {\r\n                id: id,\r\n                imageId:imageId\r\n            }\r\n        });\r\n    }\r\n    async function deletePlace(placeId) {\r\n     const res =  await PlaceService.deletePlace(placeId);\r\n     if (res.status=='200'){\r\n         setPlaces(places.filter(place=>place.id!==placeId));\r\n     }\r\n    }\r\n\r\n    const getTable = () =>{\r\n        return(\r\n        <table className=\"table table-striped table bordered\">\r\n        <thead>\r\n            <tr>\r\n                <th>Place Name</th>\r\n                <th>Table Count</th>\r\n                <th>Actions</th>\r\n                <th>Image</th>\r\n            </tr>\r\n\r\n        </thead>\r\n\r\n        <tbody>\r\n            {\r\n                places.map(\r\n                    place =>\r\n                        <tr key={place.id} >\r\n                            <td >{place.name}</td>\r\n                            <td >{place.tableCount}</td>\r\n                            <td><img src={'data:image/png;base64,' + place.image.fileContent} style={{ borderRadius: \"10px\" }} width=\"50\" /></td>\r\n                            <td >\r\n                                <button onClick={() => editPlace(place.id,place.image.id)} className=\"btn btn-info\">Edit</button>\r\n                                <button style={{ marginLeft: \"10px\" }} onClick={() => deletePlace(place.id)} className=\"btn btn-danger\" >Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                )\r\n            }\r\n\r\n        </tbody>\r\n    </table>)\r\n    }\r\n    \r\n    if(loading==true){\r\n        return (<Loading/>);\r\n    }\r\n\r\n    return (\r\n           <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Place List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={()=>history.push(`add-place`)}>Add Place</button>\r\n                     {getTable()}\r\n                </div>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\nexport default ListPlace;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\login\\Login.js",["474","475"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\place\\EditPlace.js",["476","477","478","479"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MediaService from '../../services/MediaService';\r\nimport PlaceService from '../../services/PlaceService';\r\nimport Loading from '../loading/Loading';\r\n\r\n\r\nconst EditPlace = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [place, setPlace] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        tableCount: 0,\r\n        imageId: history.location.state?.imageId,\r\n        image: []\r\n    });\r\n\r\n    const { id, name, tableCount, image, imageId } = place;\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setPlace({ ...place, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const editPlace = () => {\r\n        PlaceService.updatePlace(place);\r\n        history.push(`/place`);\r\n    }\r\n    useEffect(() => {\r\n\r\n        getData();\r\n\r\n    }, []);\r\n\r\n    const onChangeImage = (e) => {\r\n        setPlace({ ...place, image: medias[e.target.value] });\r\n    }\r\n\r\n    const getMedias = () => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>Place Image :</label>\r\n                <select\r\n                    className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                    {\r\n                        medias.map(\r\n                            (media, index) =>\r\n\r\n                                <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                        )\r\n                    }\r\n                </select>\r\n                {showImage()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    async function getData() {\r\n\r\n        const res = await PlaceService.getPlaceById(id);\r\n        const resMedias = await MediaService.getMedias();\r\n\r\n        await setMedias(resMedias.data);\r\n        await setPlace({\r\n            ...place,\r\n            name: res.data.name,\r\n            tableCount: res.data.tableCount,\r\n            image: res.data.image,\r\n            imageId: history.location.state?.imageId\r\n        });\r\n        setLoading(false);\r\n\r\n    }\r\n    if (loading == true) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <h3 className=\"text-canter\">Edit Place</h3>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Place Name :</label>\r\n                                <input placeholder=\"Place Name\" name=\"name\" className=\"form-control\"\r\n                                    value={name} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Table Count :</label>\r\n                                <input placeholder=\"Table Count\" name=\"tableCount\" className=\"form-control\"\r\n                                    value={tableCount} onChange={onChangeHandler} />\r\n                            </div>\r\n                            {getMedias()}\r\n                            <button className=\"btn btn-success\" onClick={() => editPlace()}>Save</button>\r\n                            <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/place`)} >Cancel</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default EditPlace;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\info\\Info.js",["480","481"],"import { useEffect, useState } from 'react';\r\nimport InfoService from '../../services/InfoService'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst Info = () => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    const [info, setInfo] = useState([]);\r\n    const [profile, setProfile] = useState([]);\r\n    const [beanNames, setBeanNames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getData();\r\n\r\n    }, []);\r\n    async function getData() {\r\n        const resInfo = await InfoService.getInfo();\r\n        setInfo(resInfo.data);\r\n        const resProfile = await InfoService.getProfileInfo();\r\n        setProfile(resProfile.data);\r\n        const resBeans = await InfoService.getBeanNames();\r\n        setBeanNames(resBeans.data);\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <h2 className=\"text-center\">Properties Info</h2>\r\n                        <div className=\"row\">\r\n                            <table className=\"table table-striped table bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Key</th>\r\n                                        <th>Value</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        info.map(\r\n                                            info =>\r\n                                                <tr >\r\n                                                    <td >{info.key}</td>\r\n                                                    <td >{info.value}</td>\r\n\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <h2 className=\"text-center\">Profile Info</h2>\r\n                        <div className=\"row\">    \r\n                            <table className=\"table table-striped table bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Key</th>\r\n                                        <th>Value</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        profile.map(\r\n                                            profile =>\r\n                                                <tr >\r\n                                                    <td >{profile.key}</td>\r\n                                                    <td >{profile.value}</td>\r\n\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <h2 className=\"text-center\">Beans Name List</h2>\r\n                        <div className=\"row\" style={{ overflow: \"auto\", height: \"35rem\" }}>\r\n                            <table className=\"table table-striped table bordered\" >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Bean Name</th>\r\n\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        beanNames.map(\r\n                                            beanName =>\r\n                                                <tr >\r\n                                                    <td >{beanName}</td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Info;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\place\\CreatePlace.js",["482","483","484","485","486"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MediaService from '../../services/MediaService';\r\nimport PlaceService from '../../services/PlaceService';\r\nimport Header from '../header/Header';\r\nimport { useFormik } from 'formik';\r\n\r\nconst validate = values => {\r\n   \r\n    const errors = {};\r\n    if (!values.name) {\r\n        console.log('geldi');\r\n      errors.name = 'Required';\r\n    } else if (values.name.length > 15) {\r\n        console.log('geldi');\r\n      errors.name = 'Must be 15 characters or less';\r\n    }\r\n  \r\n    if (!values.tableCount) {\r\n        console.log('geldi');\r\n      errors.tableCount = 'Required';\r\n    } else if (values.tableCount<1) {\r\n        \r\n      errors.tableCount = 'Must be big than 0';\r\n      console.log(errors.tableCount);\r\n    }\r\n  \r\n    return errors;\r\n  };\r\nconst CreatePlace = () => {\r\n    const history = useHistory();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          name: '',\r\n          tableCount: '',\r\n          image: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n         savePlace(values);\r\n        },\r\n      });\r\n    const [place, setPlace] = useState({\r\n        name: '', tableCount: 0,image : ''\r\n    });\r\n\r\n    const [medias,setMedias] = useState([]);\r\n    const { name, tableCount,image } = place;\r\n   \r\n    useEffect(()=>{\r\n        getMedias();\r\n    },[]);\r\n\r\n    // const onChangeHandler=(e)=> {\r\n    //     setPlace({ ...place, [e.target.name]: e.target.value });\r\n    // }\r\n\r\n    const savePlace=(place)=> {\r\n        PlaceService.createPlace(place);\r\n        history.push(`/place`);\r\n    }\r\n    \r\n    const onChangeImage = (e) => {\r\n        formik.values.image= medias[e.target.value];\r\n        //setPlace({ ...place, image: medias[e.target.value] });\r\n    }\r\n\r\n    async function getMedias() {\r\n        \r\n        const res = await MediaService.getMedias();\r\n\r\n        await setMedias(res.data);\r\n        formik.values.image= res.data[0];\r\n       // setPlace({ ...place, image: res.data[0] });\r\n\r\n    }\r\n\r\n    const showImage =  () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    const getListBox = ()=>{\r\n        return(\r\n        <div className=\"form-group\">\r\n        <label>Category Image :</label>\r\n        <select\r\n            className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n            {\r\n                medias.map(\r\n                    (media, index) =>\r\n\r\n                        <option key={media.id} value={index}>{media.fileName}</option>\r\n                )\r\n            }\r\n        </select>\r\n        {showImage()}\r\n\r\n    </div>)\r\n    }\r\n\r\n    const getForm = () =>{\r\n        return(\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Place Name :</label>\r\n                <input placeholder=\"Place Name\" name=\"name\" className=\"form-control\" id=\"name\"\r\n         type=\"text\"\r\n         onChange={formik.handleChange}\r\n         value={formik.values.name}\r\n                    // value={name} onChange={onChangeHandler} \r\n                    />\r\n                    {formik.touched.name && formik.errors.name ? ( <div>{formik.errors.name}</div>) : null}\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label>Table Count :</label>\r\n                <input placeholder=\"Table Count\" name=\"tableCount\" className=\"form-control\"\r\n                    // value={tableCount} onChange={onChangeHandler}\r\n                    id=\"tableCount\"\r\n         type=\"number\"\r\n         onChange={formik.handleChange}\r\n         value={formik.values.lastName}\r\n\r\n                     />\r\n            </div>\r\n            {formik.touched.tableCount && formik.errors.tableCount ? (<div>{formik.errors.tableCount}</div>) : null}\r\n            {getListBox()}\r\n            <button type=\"submit\" className=\"btn btn-success\" >Save</button>\r\n            <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={()=>history.push(`/place`)} >Cancel</button>\r\n        </form>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Category</h3>\r\n                        <div className=\"card-body\">\r\n                            {getForm()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\nexport default CreatePlace;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\category\\ListCategory.js",["487","488","489","490"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst ListCategory = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getCategories();\r\n    },[]);\r\n\r\n    async function getCategories() {\r\n        const res = await CategoryService.getCategory();\r\n        await setCategories(res.data);\r\n        setLoading(false);\r\n\r\n\r\n    }\r\n    const deleteCategory = (categoryId) => {\r\n        setCategories(categories.filter(category => category.id !== categoryId));\r\n\r\n    }\r\n    const editCategory = (id, imageId) => {\r\n        history.push({\r\n            pathname: '/update-category',\r\n            state: {\r\n                id: id,\r\n                imageId: imageId\r\n\r\n            },\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            {loading==true? <Loading/> :\r\n           <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Category List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={() => history.push(`add-category`)}>Add Category</button>\r\n                    </div>\r\n                    <div className=\"row\"  style={{ overflow: \"auto\", height: \"35rem\" }}>\r\n                    <table className=\"table table-striped table bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Category Name</th>\r\n                                <th>Category Description</th>\r\n                                <th>Category Image</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                categories.map(\r\n                                    category =>\r\n                                        <tr key={category.id} >\r\n                                            <td >{category.name}</td>\r\n                                            <td >{category.description}</td>\r\n                                            <td><img src={'data:image/png;base64,' + category.image.fileContent} style={{ borderRadius: \"10px\" }} width=\"50\" /></td>\r\n                                            <td >\r\n                                                <button onClick={() => editCategory(category.id, category.image.id)} className=\"btn btn-info\">Edit</button>\r\n                                                <button style={{ marginLeft: \"10px\" }} onClick={() => deleteCategory(category.id)} className=\"btn btn-danger\" >Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>)\r\n}\r\nexport default ListCategory;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\category\\EditCategory.js",["491","492","493","494"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditCategory = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    const [category, setCategory] = useState({\r\n\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        description: '',\r\n        imageId: history.location.state?.imageId,\r\n        image: []\r\n\r\n    });\r\n\r\n    const { id, name, description, image, imageId } = category;\r\n\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getData();\r\n\r\n    }, []);\r\n\r\n    async function getData() {\r\n\r\n        const res = await CategoryService.getCategoryById(id);\r\n        const resMedias = await MediaService.getMedias();\r\n\r\n        await setMedias(resMedias.data);\r\n        await setCategory({\r\n            ...category,\r\n            name: res.data.name,\r\n            description: res.data.description,\r\n            image: res.data.image,\r\n            imageId: history.location.state?.imageId\r\n        });\r\n        setLoading(false);\r\n\r\n\r\n    }\r\n\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n    const onChangeHandler = (e) => {\r\n\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setCategory({ ...category, image: medias[e.target.value] });\r\n    }\r\n\r\n    const updateCategory = async (e) => {\r\n        e.preventDefault();\r\n        await CategoryService.updateCategory(category);\r\n        history.push(`/category`);\r\n    }\r\n    const getMedias = () => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>Category Image :</label>\r\n                <select\r\n                    className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                    {\r\n                        medias.map(\r\n                            (media, index) =>\r\n\r\n                                <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                        )\r\n                    }\r\n                </select>\r\n                {showImage()}\r\n            </div>\r\n        )\r\n    }\r\n    const getForm = () => {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label>Name :</label>\r\n                    <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                        value={name} onChange={onChangeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description :</label>\r\n                    <input placeholder=\"Category\" name=\"description\" className=\"form-control\"\r\n                        value={description} onChange={onChangeHandler} />\r\n                </div>\r\n                {getMedias()}\r\n                <button className=\"btn btn-success\" onClick={(e) => updateCategory(e)}>Save</button>\r\n                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/category`)} >Cancel</button>\r\n            </form>\r\n        )\r\n    }\r\n    if (loading == true) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Category</h3>\r\n                        <div className=\"card-body\">\r\n                            {getForm()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default EditCategory;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\product\\CreateProduct.js",["495","496","497","498"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\product\\EditProduct.js",["499","500","501","502","503"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\category\\CreateCategory.js",["504","505"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\product\\ListProduct.js",["506","507","508","509","510","511"],"import { useEffect, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProductService from '../../services/ProductService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\nimport { Context } from '../../contextApi/ContextApi';\r\nimport Pagination from \"react-js-pagination\";\r\nconst ListProduct = () => {\r\n    const { user } = useContext(Context);\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [products, setProducts] = useState([]);\r\n    const [activePage, setActivePage] = useState(0);\r\n    const [totalElemnts, setTotalElemnts] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        if (user.username == '' && user.password == '') {\r\n            history.push('');\r\n        }\r\n\r\n        getProducts();\r\n    }, []);\r\n    async function getProducts() {\r\n        console.log(activePage);\r\n        const res = await ProductService.getProductPage(activePage);\r\n        await setTotalElemnts(res.data.totalElements);\r\n        await setProducts(res.data.content);\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    const editProduct = (id, catId, imageId) => {\r\n        history.push({\r\n            pathname: '/update-product',\r\n            state: {\r\n                id: id,\r\n                catId: catId,\r\n                imageId: imageId\r\n            }\r\n        });\r\n    }\r\n\r\n    const deleteProduct = async (id) => {\r\n        await ProductService.deleteProduct(id);\r\n        setProducts(products.filter(products => products.id !== id));\r\n    }\r\n    const onChangePage = async (e) => {\r\n\r\n        await setActivePage(e - 1);\r\n        await setLoading(true);\r\n        const res = await ProductService.getProductPage(e - 1);\r\n        await setProducts(res.data.content);\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <h2 className=\"text-center\">Product List</h2>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-primary\" onClick={() => history.push(`add-product`)}>Add Product</button>\r\n                            <button style={{ marginLeft: \"6px\" }} className=\"btn btn-primary\" >All Products</button>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <table className=\"table table-striped table-bordered\" >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Category</th>\r\n                                        <th>Name</th>\r\n                                        <th>Description</th>\r\n                                        <th>Price</th>\r\n                                        <th>Image</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n                                    products.map(\r\n                                        product =>\r\n                                            <tbody>\r\n                                                {\r\n                                                    <tr key={product.id}>\r\n                                                        <td >\r\n                                                            {\r\n                                                                product.categories.map(category =>\r\n                                                                    <a href=\"#\">{category.name} </a>\r\n                                                                )\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td>{product.name}</td>\r\n                                                        <td>{product.description}</td>\r\n                                                        <td>{product.salesPrice}</td>\r\n                                                        <td style={{ textAlign: \"center\" }} ><img src={'data:image/png;base64,' + product.image.fileContent} style={{ borderRadius: \"10px\" }} width=\"50\" /></td>\r\n                                                        <td>\r\n                                                            <button onClick={() => editProduct(product.id, product.categoryId, product.image.id)}\r\n                                                                className=\"btn btn-info\"> Update\r\n                                                                </button>\r\n                                                            <button style={{ marginLeft: \"6px\" }} onClick={() => deleteProduct(product.id)}\r\n                                                                className=\"btn btn-danger\"> Delete\r\n                                                                </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                }\r\n                                            </tbody>\r\n                                    )\r\n                                }\r\n                            </table>\r\n\r\n                        </div>\r\n                        <div className=\"row\" style={{marginLeft:\"20rem\"}}>\r\n                        <Pagination \r\n                            itemClass=\"page-item\"\r\n                            linkClass=\"page-link\"\r\n                            activePage={activePage + 1}\r\n                            itemsCountPerPage={10}\r\n                            totalItemsCount={totalElemnts}\r\n                            pageRangeDisplayed={10}\r\n                            onChange={onChangePage} />\r\n                            </div>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>);\r\n}\r\nexport default ListProduct;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\role\\ListRole.js",["512"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\role\\CreateRole.js",["513","514"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\role\\EditRole.js",["515","516"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\user\\CreateUser.js",["517"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\user\\EditUser.js",["518","519"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\user\\ListUser.js",["520","521","522","523"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\WaiterService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\InfoService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\MediaService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\CategoryService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\ProductService.js",[],["524","525"],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\PlaceService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\UserService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\RoleService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\loading\\Loading.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\customer\\CreateCustomer.js",["526","527","528","529","530","531","532","533","534"],"import { useEffect, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomerService from '../../services/CustomerService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport { Context } from '../../contextApi/ContextApi';\r\nimport {createSuccessNotification, createErrorNotification,createWarningNotification,createInfoNotification} from \"../Natifications\";\r\nconst CreateCustomer = () => {\r\n    const {language,user} = useContext(Context);\r\n    const history = useHistory();\r\n\r\n    const [customer, setCustomer] = useState({\r\n        name: '', surname: '', address: '', phone: '', image: ''\r\n    });\r\n    const [medias, setMedias] = useState([]);\r\n    const { name, surname, address, phone, image } = customer;\r\n\r\n    useEffect(() => {\r\n        \r\n        getMedias();\r\n    }, []);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setCustomer({ ...customer, [e.target.name]: e.target.value });\r\n    }\r\n    const onChangeImage = (e) => {\r\n        setCustomer({ ...customer, image: medias[e.target.value] });\r\n    }\r\n    async function getMedias() {\r\n\r\n        const res = await MediaService.getMedias();\r\n\r\n        await setMedias(res.data);\r\n\r\n        setCustomer({ ...customer, image: res.data[0] });\r\n\r\n    }\r\n\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    const saveCustomer = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (name.trim() == '' || surname.trim() == '' || address.trim() == '' || phone.trim() == '') {\r\n            createErrorNotification('Tüm alanları eksiksiz doldurunuz.')\r\n            return;\r\n        }\r\n        let res;\r\n         await CustomerService.createCustomer(customer,language).then(response => {\r\n            res = response;\r\n        }).catch(({ response }) => {\r\n\r\n            res = response;\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            createSuccessNotification('Adding record is successful.');\r\n            history.push('/customers')\r\n        } else {\r\n            createErrorNotification('There was a problem adding the record.');\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    const getListBox = () => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>Category Image :</label>\r\n                <select\r\n                    className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                    {\r\n                        medias.map(\r\n                            (media, index) =>\r\n\r\n                                <option key={media.id} value={index}>{media.fileName}</option>\r\n                        )\r\n                    }\r\n                </select>\r\n                {showImage()}\r\n\r\n            </div>)\r\n    }\r\n\r\n    const getHeader = () => {\r\n        return (\r\n            <Header />\r\n        )\r\n    }\r\n    const getForm = () => {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label>Name :</label>\r\n                    <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                        value={name} onChange={onChangeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Surname :</label>\r\n                    <input placeholder=\"Surname\" name=\"surname\" className=\"form-control\"\r\n                        value={surname} onChange={onChangeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Address :</label>\r\n                    <input placeholder=\"Adress\" name=\"address\" className=\"form-control\"\r\n                        value={address} onChange={onChangeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Phone :</label>\r\n                    <input placeholder=\"Phone\" name=\"phone\" className=\"form-control\"\r\n                        value={phone} onChange={onChangeHandler} type=\"number\" />\r\n                </div>\r\n                {getListBox()}\r\n                <button className=\"btn btn-success\" onClick={(e) => saveCustomer(e)}>Save</button>\r\n                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push('/customers')} >Cancel</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {getHeader()}\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Customer</h3>\r\n                        <div className=\"card-body\">\r\n                            {getForm()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CreateCustomer;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\services\\CustomerService.js",[],"D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\customer\\ListCustomer.js",["535","536","537","538","539","540","541","542","543","544"],"import { useEffect, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomerService from '../../services/CustomerService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Context } from '../../contextApi/ContextApi';\r\nimport { createSuccessNotification, createErrorNotification, createWarningNotification, createInfoNotification } from \"../Natifications\";\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n\r\nconst ListCustomer = () => {\r\n\r\n    const headers = [\r\n        { label: \"Name\", key: \"name\" },\r\n        { label: \"Surname\", key: \"surname\" },\r\n        { label: \"Address\", key: \"address\" },\r\n        { label: \"Phone\", key: \"phone\" }\r\n    ];\r\n\r\n\r\n    const { user, language } = useContext(Context);\r\n    const history = useHistory();\r\n    const [customers, setCustomers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [activePage, setActivePage] = useState(0);\r\n    const [totalElements, setTotalElements] = useState();\r\n\r\n    useEffect(() => {\r\n        if (user.username == '' && user.password == '') {\r\n            history.push('');\r\n        }\r\n        getCustomersByPage(0);\r\n\r\n    }, []);\r\n\r\n    const getCustomersByPage = async (activePage) => {\r\n        let res;\r\n        console.log(language);\r\n        await CustomerService.getCustomersByPage(activePage, language)\r\n            .then(response => {\r\n                setCustomers(response.data.content);\r\n                setTotalElements(response.data.totalElements);\r\n                setLoading(false);\r\n            }).catch(({ response }) => {\r\n                setLoading(false);\r\n                createInfoNotification(response.data.message);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    const editCustomer = (customerId, imageId) => {\r\n        history.push({\r\n            pathname: '/update-customer',\r\n            state: {\r\n                id: customerId,\r\n                imageId: imageId\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const deleteCustomer = async (customerId) => {\r\n\r\n        setLoading(true);\r\n        let res;\r\n        await CustomerService.deleteCustomer(customerId)\r\n            .then(response => {\r\n                res = response;\r\n            }).catch(({ response }) => {\r\n\r\n                res = response;\r\n            });\r\n\r\n\r\n        if (res.status === 200) {\r\n            createSuccessNotification('Deleting record is successful.');\r\n            await getCustomersByPage(activePage);\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    const getHeader = () => {\r\n        return (\r\n            <Header />\r\n        )\r\n    }\r\n\r\n\r\n    const getCustomersTable = () => {\r\n\r\n        if (customers != undefined) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Surname</th>\r\n                                <th>Address</th>\r\n                                <th>Phone</th>\r\n                                <th>Image</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {\r\n                            customers.map(\r\n                                customer =>\r\n                                    <tbody>\r\n                                        {\r\n                                            <tr key={customer.id}>\r\n                                                <td>{customer.name}</td>\r\n                                                <td>{customer.surname}</td>\r\n                                                <td>{customer.address}</td>\r\n                                                <td>{customer.phone}</td>\r\n                                                <td><img src={'data:image/png;base64,' + customer.image.fileContent} style={{ borderRadius: \"10px\" }} width=\"50\" /></td>\r\n                                                <td>\r\n                                                    <button onClick={() => editCustomer(customer.id, customer.image.id)}\r\n                                                        className=\"btn btn-info\"> Update\r\n                                                        </button>\r\n                                                    <button style={{ marginLeft: \"6px\" }} onClick={() => deleteCustomer(customer.id)}\r\n                                                        className=\"btn btn-danger\"> Delete\r\n                                                        </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        }\r\n                                    </tbody>\r\n                            )\r\n                        }\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const onChangePage = async (e) => {\r\n\r\n        setActivePage(e - 1);\r\n        setLoading(true);\r\n        await getCustomersByPage(e - 1)\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    const getPagenition = () => {\r\n        if (customers != undefined) {\r\n            return (\r\n                <div className=\"row\" >\r\n                    <Pagination\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        activePage={activePage + 1}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={totalElements}\r\n                        pageRangeDisplayed={10}\r\n                        onChange={onChangePage} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    if (loading == true) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            {getHeader()}\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Customer List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={() => history.push(`add-customer`)}>Add Customer</button>\r\n                    <CSVLink className=\"btn btn-primary\" style={{marginLeft:\"10px\"}} data={customers} headers={headers}>\r\n                        Download Excel\r\n                      </CSVLink>\r\n                </div>\r\n                {getCustomersTable()}\r\n                {getPagenition()}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ListCustomer;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\customer\\EditCustomer.js",["545","546","547","548","549","550","551","552"],"import { useEffect, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomerService from '../../services/CustomerService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\nimport { createSuccessNotification, createErrorNotification, createWarningNotification, createInfoNotification } from \"../Natifications\";\r\nconst EditCustomer = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [customer, setCustomer] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        surname: '',\r\n        address: '',\r\n        phone: '',\r\n        imageId: history.location.state?.imageId,\r\n        image: []\r\n    });\r\n    const { id, name, surname, address, phone,imageId,image } = customer;\r\n    const [medias, setMedias] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getCustomerInfo();\r\n\r\n    }, [])\r\n\r\n    const onChangeHandler = (e) => {\r\n\r\n        setCustomer({ ...customer, [e.target.name]: e.target.value });\r\n    }\r\n    const onChangeImage = (e) => {\r\n        setCustomer({ ...customer, image: medias[e.target.value] });\r\n    }\r\n\r\n    async function getCustomerInfo() {\r\n        await MediaService.getMedias()\r\n        .then(res=>\r\n            {\r\n                setMedias(res.data);\r\n            })\r\n        .catch(({response})=>\r\n        {\r\n            createErrorNotification('Medias not found.');\r\n            history.push(\"/media\");\r\n        });\r\n\r\n        await CustomerService.getCustomerById(id)\r\n            .then(res => {\r\n                const customer = res.data;\r\n                setCustomer({ ...customer, \r\n                    name: customer.name, \r\n                    surname: customer.surname, \r\n                    address: customer.address, \r\n                    phone: customer.phone,\r\n                    image:customer.image,\r\n                    imageId: history.location.state?.imageId })\r\n                setLoading(false);\r\n            }).catch(({ response }) => {\r\n\r\n                createErrorNotification('Customer not found.');\r\n                setLoading(false);\r\n            });\r\n\r\n\r\n\r\n    }\r\n    const updateCustomer = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const res = await CustomerService.updateCustomer(customer) .then(res => {\r\n           createSuccessNotification('Updating record is successful.');\r\n           history.push('/customers');\r\n        }).catch(({ response }) => {\r\n\r\n            createErrorNotification('There was a problem updating the record.');\r\n            setLoading(false);\r\n        });;\r\n      \r\n  \r\n\r\n    }\r\n\r\n    const getHeader = () => {\r\n        return (\r\n            <Header />\r\n        )\r\n    }\r\n    if (loading === true) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    const getMedias = () => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>Customer Image :</label>\r\n                <select\r\n                    className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                    {\r\n                        medias.map(\r\n                            (media, index) =>\r\n\r\n                                <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                        )\r\n                    }\r\n                </select>\r\n                {showImage()}\r\n            </div>\r\n        )\r\n    }\r\n    const getForm = () => {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label>Name :</label>\r\n                    <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                        value={name} onChange={onChangeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Surname :</label>\r\n                    <input placeholder=\"Surname\" name=\"surname\" className=\"form-control\"\r\n                        value={surname} onChange={onChangeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Address :</label>\r\n                    <input placeholder=\"Adress\" name=\"address\" className=\"form-control\"\r\n                        value={address} onChange={onChangeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Phone :</label>\r\n                    <input placeholder=\"Phone\" name=\"phone\" className=\"form-control\"\r\n                        value={phone} onChange={onChangeHandler} type=\"number\" />\r\n                </div>\r\n                {getMedias()}\r\n                <button className=\"btn btn-success\" onClick={(e) => updateCustomer(e)}>Save</button>\r\n                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push('/customers')} >Cancel</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {getHeader()}\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Customer</h3>\r\n                        <div className=\"card-body\">\r\n                            {getForm()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default EditCustomer;","D:\\BilgeAdam\\restaurant-api\\restaurant\\backoffice\\src\\components\\Natifications.js",[],{"ruleId":"553","replacedBy":"554"},{"ruleId":"555","replacedBy":"556"},{"ruleId":"557","severity":1,"message":"558","line":5,"column":8,"nodeType":"559","messageId":"560","endLine":5,"endColumn":23},{"ruleId":"557","severity":1,"message":"561","line":9,"column":9,"nodeType":"559","messageId":"560","endLine":9,"endColumn":16},{"ruleId":"562","severity":1,"message":"563","line":23,"column":24,"nodeType":"564","messageId":"565","endLine":23,"endColumn":26},{"ruleId":"566","severity":1,"message":"567","line":22,"column":17,"nodeType":"568","endLine":22,"endColumn":54},{"ruleId":"557","severity":1,"message":"561","line":9,"column":9,"nodeType":"559","messageId":"560","endLine":9,"endColumn":16},{"ruleId":"557","severity":1,"message":"569","line":14,"column":13,"nodeType":"559","messageId":"560","endLine":14,"endColumn":21},{"ruleId":"557","severity":1,"message":"570","line":14,"column":23,"nodeType":"559","messageId":"560","endLine":14,"endColumn":31},{"ruleId":"562","severity":1,"message":"563","line":23,"column":24,"nodeType":"564","messageId":"565","endLine":23,"endColumn":26},{"ruleId":"571","severity":1,"message":"572","line":24,"column":17,"nodeType":"573","messageId":"574","endLine":24,"endColumn":35},{"ruleId":"575","severity":1,"message":"576","line":48,"column":8,"nodeType":"577","endLine":48,"endColumn":22,"suggestions":"578"},{"ruleId":"562","severity":1,"message":"563","line":58,"column":22,"nodeType":"564","messageId":"565","endLine":58,"endColumn":24},{"ruleId":"579","severity":1,"message":"580","line":90,"column":57,"nodeType":"568","endLine":90,"endColumn":127},{"ruleId":"566","severity":1,"message":"567","line":24,"column":17,"nodeType":"568","endLine":24,"endColumn":54},{"ruleId":"566","severity":1,"message":"567","line":27,"column":25,"nodeType":"568","endLine":27,"endColumn":92},{"ruleId":"566","severity":1,"message":"567","line":30,"column":25,"nodeType":"568","endLine":30,"endColumn":88},{"ruleId":"566","severity":1,"message":"567","line":33,"column":25,"nodeType":"568","endLine":33,"endColumn":92},{"ruleId":"566","severity":1,"message":"567","line":36,"column":25,"nodeType":"568","endLine":36,"endColumn":90},{"ruleId":"566","severity":1,"message":"567","line":39,"column":25,"nodeType":"568","endLine":39,"endColumn":91},{"ruleId":"566","severity":1,"message":"567","line":43,"column":25,"nodeType":"568","endLine":43,"endColumn":90},{"ruleId":"566","severity":1,"message":"567","line":46,"column":25,"nodeType":"568","endLine":46,"endColumn":89},{"ruleId":"566","severity":1,"message":"567","line":49,"column":25,"nodeType":"568","endLine":49,"endColumn":90},{"ruleId":"566","severity":1,"message":"567","line":52,"column":25,"nodeType":"568","endLine":52,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":27,"column":21,"nodeType":"564","messageId":"565","endLine":27,"endColumn":23},{"ruleId":"575","severity":1,"message":"581","line":50,"column":8,"nodeType":"577","endLine":50,"endColumn":10,"suggestions":"582"},{"ruleId":"575","severity":1,"message":"583","line":28,"column":8,"nodeType":"577","endLine":28,"endColumn":10,"suggestions":"584"},{"ruleId":"579","severity":1,"message":"580","line":41,"column":19,"nodeType":"568","endLine":41,"endColumn":89},{"ruleId":"575","severity":1,"message":"585","line":36,"column":8,"nodeType":"577","endLine":36,"endColumn":10,"suggestions":"586"},{"ruleId":"562","severity":1,"message":"563","line":45,"column":22,"nodeType":"564","messageId":"565","endLine":45,"endColumn":24},{"ruleId":"579","severity":1,"message":"580","line":73,"column":57,"nodeType":"568","endLine":73,"endColumn":166},{"ruleId":"557","severity":1,"message":"587","line":1,"column":31,"nodeType":"559","messageId":"560","endLine":1,"endColumn":37},{"ruleId":"575","severity":1,"message":"588","line":34,"column":8,"nodeType":"577","endLine":34,"endColumn":10,"suggestions":"589"},{"ruleId":"562","severity":1,"message":"563","line":39,"column":26,"nodeType":"564","messageId":"565","endLine":39,"endColumn":28},{"ruleId":"562","severity":1,"message":"563","line":44,"column":24,"nodeType":"564","messageId":"565","endLine":44,"endColumn":26},{"ruleId":"579","severity":1,"message":"580","line":66,"column":19,"nodeType":"568","endLine":66,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":96,"column":22,"nodeType":"564","messageId":"565","endLine":96,"endColumn":24},{"ruleId":"562","severity":1,"message":"563","line":133,"column":102,"nodeType":"564","messageId":"565","endLine":133,"endColumn":104},{"ruleId":"575","severity":1,"message":"585","line":17,"column":7,"nodeType":"577","endLine":17,"endColumn":9,"suggestions":"590"},{"ruleId":"562","severity":1,"message":"563","line":36,"column":20,"nodeType":"564","messageId":"565","endLine":36,"endColumn":22},{"ruleId":"562","severity":1,"message":"563","line":43,"column":17,"nodeType":"564","messageId":"565","endLine":43,"endColumn":19},{"ruleId":"557","severity":1,"message":"591","line":1,"column":10,"nodeType":"559","messageId":"560","endLine":1,"endColumn":19},{"ruleId":"575","severity":1,"message":"592","line":30,"column":8,"nodeType":"577","endLine":30,"endColumn":10,"suggestions":"593"},{"ruleId":"562","severity":1,"message":"563","line":43,"column":21,"nodeType":"564","messageId":"565","endLine":43,"endColumn":23},{"ruleId":"575","severity":1,"message":"585","line":20,"column":8,"nodeType":"577","endLine":20,"endColumn":10,"suggestions":"594"},{"ruleId":"562","severity":1,"message":"563","line":32,"column":19,"nodeType":"564","messageId":"565","endLine":32,"endColumn":21},{"ruleId":"575","severity":1,"message":"595","line":27,"column":8,"nodeType":"577","endLine":27,"endColumn":10,"suggestions":"596"},{"ruleId":"579","severity":1,"message":"580","line":58,"column":19,"nodeType":"568","endLine":58,"endColumn":89},{"ruleId":"557","severity":1,"message":"597","line":4,"column":8,"nodeType":"559","messageId":"560","endLine":4,"endColumn":20},{"ruleId":"575","severity":1,"message":"585","line":18,"column":7,"nodeType":"577","endLine":18,"endColumn":9,"suggestions":"598"},{"ruleId":"562","severity":1,"message":"563","line":46,"column":21,"nodeType":"564","messageId":"565","endLine":46,"endColumn":23},{"ruleId":"579","severity":1,"message":"580","line":70,"column":49,"nodeType":"568","endLine":70,"endColumn":160},{"ruleId":"575","severity":1,"message":"599","line":31,"column":8,"nodeType":"577","endLine":31,"endColumn":10,"suggestions":"600"},{"ruleId":"579","severity":1,"message":"580","line":56,"column":19,"nodeType":"568","endLine":56,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":77,"column":21,"nodeType":"564","messageId":"565","endLine":77,"endColumn":23},{"ruleId":"562","severity":1,"message":"563","line":104,"column":94,"nodeType":"564","messageId":"565","endLine":104,"endColumn":96},{"ruleId":"557","severity":1,"message":"601","line":19,"column":32,"nodeType":"559","messageId":"560","endLine":19,"endColumn":42},{"ruleId":"557","severity":1,"message":"602","line":21,"column":29,"nodeType":"559","messageId":"560","endLine":21,"endColumn":47},{"ruleId":"575","severity":1,"message":"595","line":33,"column":8,"nodeType":"577","endLine":33,"endColumn":10,"suggestions":"603"},{"ruleId":"579","severity":1,"message":"580","line":83,"column":19,"nodeType":"568","endLine":83,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":17,"column":27,"nodeType":"564","messageId":"565","endLine":17,"endColumn":29},{"ruleId":"562","severity":1,"message":"563","line":17,"column":50,"nodeType":"564","messageId":"565","endLine":17,"endColumn":52},{"ruleId":"575","severity":1,"message":"604","line":22,"column":7,"nodeType":"577","endLine":22,"endColumn":9,"suggestions":"605"},{"ruleId":"562","severity":1,"message":"563","line":49,"column":22,"nodeType":"564","messageId":"565","endLine":49,"endColumn":24},{"ruleId":"566","severity":1,"message":"567","line":77,"column":65,"nodeType":"568","endLine":77,"endColumn":78},{"ruleId":"579","severity":1,"message":"580","line":84,"column":94,"nodeType":"568","endLine":84,"endColumn":204},{"ruleId":"557","severity":1,"message":"601","line":22,"column":36,"nodeType":"559","messageId":"560","endLine":22,"endColumn":46},{"ruleId":"575","severity":1,"message":"599","line":47,"column":7,"nodeType":"577","endLine":47,"endColumn":9,"suggestions":"606"},{"ruleId":"579","severity":1,"message":"580","line":52,"column":19,"nodeType":"568","endLine":52,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":127,"column":21,"nodeType":"564","messageId":"565","endLine":127,"endColumn":23},{"ruleId":"562","severity":1,"message":"563","line":173,"column":94,"nodeType":"564","messageId":"565","endLine":173,"endColumn":96},{"ruleId":"557","severity":1,"message":"591","line":1,"column":10,"nodeType":"559","messageId":"560","endLine":1,"endColumn":19},{"ruleId":"562","severity":1,"message":"563","line":21,"column":22,"nodeType":"564","messageId":"565","endLine":21,"endColumn":24},{"ruleId":"562","severity":1,"message":"563","line":42,"column":22,"nodeType":"564","messageId":"565","endLine":42,"endColumn":24},{"ruleId":"575","severity":1,"message":"607","line":30,"column":8,"nodeType":"577","endLine":30,"endColumn":10,"suggestions":"608"},{"ruleId":"562","severity":1,"message":"563","line":38,"column":18,"nodeType":"564","messageId":"565","endLine":38,"endColumn":20},{"ruleId":"575","severity":1,"message":"585","line":26,"column":8,"nodeType":"577","endLine":26,"endColumn":10,"suggestions":"609"},{"ruleId":"557","severity":1,"message":"610","line":3,"column":8,"nodeType":"559","messageId":"560","endLine":3,"endColumn":19},{"ruleId":"575","severity":1,"message":"585","line":23,"column":8,"nodeType":"577","endLine":23,"endColumn":10,"suggestions":"611"},{"ruleId":"562","severity":1,"message":"563","line":39,"column":22,"nodeType":"564","messageId":"565","endLine":39,"endColumn":24},{"ruleId":"566","severity":1,"message":"567","line":66,"column":69,"nodeType":"568","endLine":66,"endColumn":81},{"ruleId":"575","severity":1,"message":"599","line":47,"column":8,"nodeType":"577","endLine":47,"endColumn":10,"suggestions":"612"},{"ruleId":"562","severity":1,"message":"563","line":108,"column":22,"nodeType":"564","messageId":"565","endLine":108,"endColumn":24},{"ruleId":"553","replacedBy":"613"},{"ruleId":"555","replacedBy":"614"},{"ruleId":"557","severity":1,"message":"558","line":5,"column":8,"nodeType":"559","messageId":"560","endLine":5,"endColumn":23},{"ruleId":"557","severity":1,"message":"561","line":10,"column":9,"nodeType":"559","messageId":"560","endLine":10,"endColumn":16},{"ruleId":"557","severity":1,"message":"569","line":16,"column":13,"nodeType":"559","messageId":"560","endLine":16,"endColumn":21},{"ruleId":"557","severity":1,"message":"570","line":16,"column":23,"nodeType":"559","messageId":"560","endLine":16,"endColumn":31},{"ruleId":"562","severity":1,"message":"563","line":26,"column":24,"nodeType":"564","messageId":"565","endLine":26,"endColumn":26},{"ruleId":"571","severity":1,"message":"572","line":24,"column":17,"nodeType":"573","messageId":"574","endLine":24,"endColumn":35},{"ruleId":"575","severity":1,"message":"576","line":48,"column":8,"nodeType":"577","endLine":48,"endColumn":22,"suggestions":"615"},{"ruleId":"562","severity":1,"message":"563","line":58,"column":22,"nodeType":"564","messageId":"565","endLine":58,"endColumn":24},{"ruleId":"579","severity":1,"message":"580","line":90,"column":57,"nodeType":"568","endLine":90,"endColumn":127},{"ruleId":"575","severity":1,"message":"583","line":28,"column":8,"nodeType":"577","endLine":28,"endColumn":10,"suggestions":"616"},{"ruleId":"579","severity":1,"message":"580","line":41,"column":19,"nodeType":"568","endLine":41,"endColumn":89},{"ruleId":"557","severity":1,"message":"617","line":6,"column":13,"nodeType":"559","messageId":"560","endLine":6,"endColumn":21},{"ruleId":"566","severity":1,"message":"567","line":29,"column":17,"nodeType":"568","endLine":29,"endColumn":54},{"ruleId":"566","severity":1,"message":"567","line":32,"column":25,"nodeType":"568","endLine":32,"endColumn":94},{"ruleId":"566","severity":1,"message":"567","line":35,"column":25,"nodeType":"568","endLine":35,"endColumn":90},{"ruleId":"566","severity":1,"message":"567","line":38,"column":25,"nodeType":"568","endLine":38,"endColumn":94},{"ruleId":"566","severity":1,"message":"567","line":41,"column":25,"nodeType":"568","endLine":41,"endColumn":92},{"ruleId":"566","severity":1,"message":"567","line":44,"column":25,"nodeType":"568","endLine":44,"endColumn":93},{"ruleId":"566","severity":1,"message":"567","line":47,"column":25,"nodeType":"568","endLine":47,"endColumn":96},{"ruleId":"566","severity":1,"message":"567","line":50,"column":25,"nodeType":"568","endLine":50,"endColumn":91},{"ruleId":"566","severity":1,"message":"567","line":53,"column":25,"nodeType":"568","endLine":53,"endColumn":91},{"ruleId":"566","severity":1,"message":"567","line":56,"column":25,"nodeType":"568","endLine":56,"endColumn":92},{"ruleId":"566","severity":1,"message":"567","line":59,"column":25,"nodeType":"568","endLine":59,"endColumn":91},{"ruleId":"575","severity":1,"message":"585","line":36,"column":8,"nodeType":"577","endLine":36,"endColumn":10,"suggestions":"618"},{"ruleId":"562","severity":1,"message":"563","line":45,"column":22,"nodeType":"564","messageId":"565","endLine":45,"endColumn":24},{"ruleId":"579","severity":1,"message":"580","line":73,"column":57,"nodeType":"568","endLine":73,"endColumn":166},{"ruleId":"557","severity":1,"message":"587","line":1,"column":31,"nodeType":"559","messageId":"560","endLine":1,"endColumn":37},{"ruleId":"575","severity":1,"message":"588","line":34,"column":8,"nodeType":"577","endLine":34,"endColumn":10,"suggestions":"619"},{"ruleId":"562","severity":1,"message":"563","line":39,"column":26,"nodeType":"564","messageId":"565","endLine":39,"endColumn":28},{"ruleId":"562","severity":1,"message":"563","line":44,"column":24,"nodeType":"564","messageId":"565","endLine":44,"endColumn":26},{"ruleId":"579","severity":1,"message":"580","line":66,"column":19,"nodeType":"568","endLine":66,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":96,"column":22,"nodeType":"564","messageId":"565","endLine":96,"endColumn":24},{"ruleId":"562","severity":1,"message":"563","line":133,"column":102,"nodeType":"564","messageId":"565","endLine":133,"endColumn":104},{"ruleId":"575","severity":1,"message":"585","line":17,"column":7,"nodeType":"577","endLine":17,"endColumn":9,"suggestions":"620"},{"ruleId":"562","severity":1,"message":"563","line":37,"column":20,"nodeType":"564","messageId":"565","endLine":37,"endColumn":22},{"ruleId":"579","severity":1,"message":"580","line":62,"column":33,"nodeType":"568","endLine":62,"endColumn":141},{"ruleId":"562","severity":1,"message":"563","line":75,"column":15,"nodeType":"564","messageId":"565","endLine":75,"endColumn":17},{"ruleId":"562","severity":1,"message":"563","line":27,"column":21,"nodeType":"564","messageId":"565","endLine":27,"endColumn":23},{"ruleId":"575","severity":1,"message":"581","line":50,"column":8,"nodeType":"577","endLine":50,"endColumn":10,"suggestions":"621"},{"ruleId":"575","severity":1,"message":"622","line":35,"column":8,"nodeType":"577","endLine":35,"endColumn":10,"suggestions":"623"},{"ruleId":"562","severity":1,"message":"563","line":51,"column":74,"nodeType":"564","messageId":"565","endLine":51,"endColumn":76},{"ruleId":"579","severity":1,"message":"580","line":65,"column":19,"nodeType":"568","endLine":65,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":86,"column":17,"nodeType":"564","messageId":"565","endLine":86,"endColumn":19},{"ruleId":"575","severity":1,"message":"585","line":21,"column":8,"nodeType":"577","endLine":21,"endColumn":10,"suggestions":"624"},{"ruleId":"562","severity":1,"message":"563","line":35,"column":22,"nodeType":"564","messageId":"565","endLine":35,"endColumn":24},{"ruleId":"557","severity":1,"message":"625","line":43,"column":19,"nodeType":"559","messageId":"560","endLine":43,"endColumn":27},{"ruleId":"557","severity":1,"message":"626","line":48,"column":13,"nodeType":"559","messageId":"560","endLine":48,"endColumn":17},{"ruleId":"557","severity":1,"message":"627","line":48,"column":19,"nodeType":"559","messageId":"560","endLine":48,"endColumn":29},{"ruleId":"575","severity":1,"message":"576","line":52,"column":7,"nodeType":"577","endLine":52,"endColumn":9,"suggestions":"628"},{"ruleId":"579","severity":1,"message":"580","line":83,"column":19,"nodeType":"568","endLine":83,"endColumn":89},{"ruleId":"557","severity":1,"message":"597","line":4,"column":8,"nodeType":"559","messageId":"560","endLine":4,"endColumn":20},{"ruleId":"575","severity":1,"message":"585","line":18,"column":7,"nodeType":"577","endLine":18,"endColumn":9,"suggestions":"629"},{"ruleId":"562","severity":1,"message":"563","line":46,"column":21,"nodeType":"564","messageId":"565","endLine":46,"endColumn":23},{"ruleId":"579","severity":1,"message":"580","line":72,"column":49,"nodeType":"568","endLine":72,"endColumn":160},{"ruleId":"575","severity":1,"message":"599","line":31,"column":8,"nodeType":"577","endLine":31,"endColumn":10,"suggestions":"630"},{"ruleId":"579","severity":1,"message":"580","line":56,"column":19,"nodeType":"568","endLine":56,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":84,"column":74,"nodeType":"564","messageId":"565","endLine":84,"endColumn":76},{"ruleId":"562","severity":1,"message":"563","line":111,"column":17,"nodeType":"564","messageId":"565","endLine":111,"endColumn":19},{"ruleId":"557","severity":1,"message":"601","line":19,"column":32,"nodeType":"559","messageId":"560","endLine":19,"endColumn":42},{"ruleId":"557","severity":1,"message":"602","line":21,"column":29,"nodeType":"559","messageId":"560","endLine":21,"endColumn":47},{"ruleId":"575","severity":1,"message":"595","line":33,"column":8,"nodeType":"577","endLine":33,"endColumn":10,"suggestions":"631"},{"ruleId":"579","severity":1,"message":"580","line":83,"column":19,"nodeType":"568","endLine":83,"endColumn":89},{"ruleId":"557","severity":1,"message":"601","line":22,"column":36,"nodeType":"559","messageId":"560","endLine":22,"endColumn":46},{"ruleId":"575","severity":1,"message":"599","line":47,"column":7,"nodeType":"577","endLine":47,"endColumn":9,"suggestions":"632"},{"ruleId":"579","severity":1,"message":"580","line":52,"column":19,"nodeType":"568","endLine":52,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":127,"column":21,"nodeType":"564","messageId":"565","endLine":127,"endColumn":23},{"ruleId":"562","severity":1,"message":"563","line":173,"column":94,"nodeType":"564","messageId":"565","endLine":173,"endColumn":96},{"ruleId":"575","severity":1,"message":"595","line":27,"column":8,"nodeType":"577","endLine":27,"endColumn":10,"suggestions":"633"},{"ruleId":"579","severity":1,"message":"580","line":58,"column":19,"nodeType":"568","endLine":58,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":18,"column":27,"nodeType":"564","messageId":"565","endLine":18,"endColumn":29},{"ruleId":"562","severity":1,"message":"563","line":18,"column":50,"nodeType":"564","messageId":"565","endLine":18,"endColumn":52},{"ruleId":"575","severity":1,"message":"634","line":23,"column":8,"nodeType":"577","endLine":23,"endColumn":10,"suggestions":"635"},{"ruleId":"562","severity":1,"message":"563","line":60,"column":22,"nodeType":"564","messageId":"565","endLine":60,"endColumn":24},{"ruleId":"566","severity":1,"message":"567","line":90,"column":69,"nodeType":"568","endLine":90,"endColumn":81},{"ruleId":"579","severity":1,"message":"580","line":97,"column":94,"nodeType":"568","endLine":97,"endColumn":204},{"ruleId":"562","severity":1,"message":"563","line":42,"column":22,"nodeType":"564","messageId":"565","endLine":42,"endColumn":24},{"ruleId":"557","severity":1,"message":"591","line":1,"column":10,"nodeType":"559","messageId":"560","endLine":1,"endColumn":19},{"ruleId":"562","severity":1,"message":"563","line":21,"column":22,"nodeType":"564","messageId":"565","endLine":21,"endColumn":24},{"ruleId":"575","severity":1,"message":"607","line":30,"column":8,"nodeType":"577","endLine":30,"endColumn":10,"suggestions":"636"},{"ruleId":"562","severity":1,"message":"563","line":38,"column":18,"nodeType":"564","messageId":"565","endLine":38,"endColumn":20},{"ruleId":"575","severity":1,"message":"585","line":26,"column":8,"nodeType":"577","endLine":26,"endColumn":10,"suggestions":"637"},{"ruleId":"575","severity":1,"message":"599","line":47,"column":8,"nodeType":"577","endLine":47,"endColumn":10,"suggestions":"638"},{"ruleId":"562","severity":1,"message":"563","line":108,"column":22,"nodeType":"564","messageId":"565","endLine":108,"endColumn":24},{"ruleId":"557","severity":1,"message":"610","line":3,"column":8,"nodeType":"559","messageId":"560","endLine":3,"endColumn":19},{"ruleId":"575","severity":1,"message":"585","line":23,"column":8,"nodeType":"577","endLine":23,"endColumn":10,"suggestions":"639"},{"ruleId":"562","severity":1,"message":"563","line":39,"column":22,"nodeType":"564","messageId":"565","endLine":39,"endColumn":24},{"ruleId":"566","severity":1,"message":"567","line":66,"column":69,"nodeType":"568","endLine":66,"endColumn":81},{"ruleId":"553","replacedBy":"640"},{"ruleId":"555","replacedBy":"641"},{"ruleId":"557","severity":1,"message":"642","line":7,"column":60,"nodeType":"559","messageId":"560","endLine":7,"endColumn":85},{"ruleId":"557","severity":1,"message":"643","line":7,"column":86,"nodeType":"559","messageId":"560","endLine":7,"endColumn":108},{"ruleId":"557","severity":1,"message":"644","line":9,"column":21,"nodeType":"559","messageId":"560","endLine":9,"endColumn":25},{"ruleId":"575","severity":1,"message":"576","line":21,"column":8,"nodeType":"577","endLine":21,"endColumn":10,"suggestions":"645"},{"ruleId":"579","severity":1,"message":"580","line":44,"column":19,"nodeType":"568","endLine":44,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":52,"column":25,"nodeType":"564","messageId":"565","endLine":52,"endColumn":27},{"ruleId":"562","severity":1,"message":"563","line":52,"column":49,"nodeType":"564","messageId":"565","endLine":52,"endColumn":51},{"ruleId":"562","severity":1,"message":"563","line":52,"column":73,"nodeType":"564","messageId":"565","endLine":52,"endColumn":75},{"ruleId":"562","severity":1,"message":"563","line":52,"column":95,"nodeType":"564","messageId":"565","endLine":52,"endColumn":97},{"ruleId":"557","severity":1,"message":"646","line":8,"column":37,"nodeType":"559","messageId":"560","endLine":8,"endColumn":60},{"ruleId":"557","severity":1,"message":"642","line":8,"column":62,"nodeType":"559","messageId":"560","endLine":8,"endColumn":87},{"ruleId":"562","severity":1,"message":"563","line":31,"column":27,"nodeType":"564","messageId":"565","endLine":31,"endColumn":29},{"ruleId":"562","severity":1,"message":"563","line":31,"column":50,"nodeType":"564","messageId":"565","endLine":31,"endColumn":52},{"ruleId":"575","severity":1,"message":"647","line":36,"column":8,"nodeType":"577","endLine":36,"endColumn":10,"suggestions":"648"},{"ruleId":"557","severity":1,"message":"649","line":39,"column":13,"nodeType":"559","messageId":"560","endLine":39,"endColumn":16},{"ruleId":"562","severity":1,"message":"650","line":96,"column":23,"nodeType":"564","messageId":"565","endLine":96,"endColumn":25},{"ruleId":"579","severity":1,"message":"580","line":120,"column":53,"nodeType":"568","endLine":120,"endColumn":164},{"ruleId":"562","severity":1,"message":"650","line":151,"column":23,"nodeType":"564","messageId":"565","endLine":151,"endColumn":25},{"ruleId":"562","severity":1,"message":"563","line":168,"column":17,"nodeType":"564","messageId":"565","endLine":168,"endColumn":19},{"ruleId":"557","severity":1,"message":"651","line":1,"column":31,"nodeType":"559","messageId":"560","endLine":1,"endColumn":41},{"ruleId":"557","severity":1,"message":"642","line":7,"column":62,"nodeType":"559","messageId":"560","endLine":7,"endColumn":87},{"ruleId":"557","severity":1,"message":"643","line":7,"column":89,"nodeType":"559","messageId":"560","endLine":7,"endColumn":111},{"ruleId":"575","severity":1,"message":"652","line":29,"column":8,"nodeType":"577","endLine":29,"endColumn":10,"suggestions":"653"},{"ruleId":"557","severity":1,"message":"654","line":75,"column":15,"nodeType":"559","messageId":"560","endLine":75,"endColumn":18},{"ruleId":"655","severity":1,"message":"656","line":75,"column":27,"nodeType":"657","messageId":"658","endLine":75,"endColumn":73,"fix":"659"},{"ruleId":"579","severity":1,"message":"580","line":103,"column":19,"nodeType":"568","endLine":103,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":118,"column":74,"nodeType":"564","messageId":"565","endLine":118,"endColumn":76},"no-native-reassign",["660"],"no-negated-in-lhs",["661"],"no-unused-vars","'HeaderComponent' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'username' is assigned a value but never used.","'password' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMedias'. Either include it or remove the dependency array.","ArrayExpression",["662"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["663"],"React Hook useEffect has missing dependencies: 'getImages' and 'history'. Either include them or remove the dependency array.",["664"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["665"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'getData', 'history', and 'id'. Either include them or remove the dependency array.",["666"],["667"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'getPlaceById' and 'id'. Either include them or remove the dependency array.",["668"],["669"],"React Hook useEffect has missing dependencies: 'getMedias' and 'history'. Either include them or remove the dependency array.",["670"],"'MediaService' is defined but never used.",["671"],"React Hook useEffect has missing dependencies: 'getData' and 'history'. Either include them or remove the dependency array.",["672"],"'categoryId' is assigned a value but never used.","'setMultiCategories' is assigned a value but never used.",["673"],"React Hook useEffect has missing dependencies: 'history', 'user.password', and 'user.username'. Either include them or remove the dependency array.",["674"],["675"],"React Hook useEffect has missing dependencies: 'getRoleById' and 'history'. Either include them or remove the dependency array.",["676"],["677"],"'RoleService' is defined but never used.",["678"],["679"],["660"],["661"],["680"],["681"],"'language' is assigned a value but never used.",["682"],["683"],["684"],["685"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["686"],["687"],"'setPlace' is assigned a value but never used.","'name' is assigned a value but never used.","'tableCount' is assigned a value but never used.",["688"],["689"],["690"],["691"],["692"],["693"],"React Hook useEffect has missing dependencies: 'getProducts', 'history', 'user.password', and 'user.username'. Either include them or remove the dependency array.",["694"],["695"],["696"],["697"],["698"],["660"],["661"],"'createWarningNotification' is defined but never used.","'createInfoNotification' is defined but never used.","'user' is assigned a value but never used.",["699"],"'createErrorNotification' is defined but never used.","React Hook useEffect has missing dependencies: 'getCustomersByPage', 'history', 'user.password', and 'user.username'. Either include them or remove the dependency array.",["700"],"'res' is defined but never used.","Expected '!==' and instead saw '!='.","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getCustomerInfo'. Either include it or remove the dependency array.",["701"],"'res' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"702","text":"703"},"no-global-assign","no-unsafe-negation",{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"desc":"710","fix":"714"},{"desc":"715","fix":"716"},{"desc":"710","fix":"717"},{"desc":"718","fix":"719"},{"desc":"710","fix":"720"},{"desc":"721","fix":"722"},{"desc":"718","fix":"723"},{"desc":"724","fix":"725"},{"desc":"721","fix":"726"},{"desc":"727","fix":"728"},{"desc":"710","fix":"729"},{"desc":"710","fix":"730"},{"desc":"721","fix":"731"},{"desc":"704","fix":"732"},{"desc":"708","fix":"733"},{"desc":"710","fix":"734"},{"desc":"712","fix":"735"},{"desc":"710","fix":"736"},{"desc":"706","fix":"737"},{"desc":"738","fix":"739"},{"desc":"710","fix":"740"},{"desc":"741","fix":"742"},{"desc":"710","fix":"743"},{"desc":"721","fix":"744"},{"desc":"718","fix":"745"},{"desc":"721","fix":"746"},{"desc":"718","fix":"747"},{"desc":"748","fix":"749"},{"desc":"727","fix":"750"},{"desc":"710","fix":"751"},{"desc":"721","fix":"752"},{"desc":"710","fix":"753"},{"desc":"741","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},[2383,2385],".","Update the dependencies array to be: [getMedias, selectedFile]",{"range":"759","text":"760"},"Update the dependencies array to be: [user]",{"range":"761","text":"762"},"Update the dependencies array to be: [getImages, history]",{"range":"763","text":"764"},"Update the dependencies array to be: [history]",{"range":"765","text":"766"},"Update the dependencies array to be: [getData, history, id]",{"range":"767","text":"768"},{"range":"769","text":"766"},"Update the dependencies array to be: [getPlaceById, id]",{"range":"770","text":"771"},{"range":"772","text":"766"},"Update the dependencies array to be: [getMedias, history]",{"range":"773","text":"774"},{"range":"775","text":"766"},"Update the dependencies array to be: [getData, history]",{"range":"776","text":"777"},{"range":"778","text":"774"},"Update the dependencies array to be: [history, user.password, user.username]",{"range":"779","text":"780"},{"range":"781","text":"777"},"Update the dependencies array to be: [getRoleById, history]",{"range":"782","text":"783"},{"range":"784","text":"766"},{"range":"785","text":"766"},{"range":"786","text":"777"},{"range":"787","text":"760"},{"range":"788","text":"764"},{"range":"789","text":"766"},{"range":"790","text":"768"},{"range":"791","text":"766"},{"range":"792","text":"762"},"Update the dependencies array to be: [getData]",{"range":"793","text":"794"},{"range":"795","text":"766"},"Update the dependencies array to be: [getMedias]",{"range":"796","text":"797"},{"range":"798","text":"766"},{"range":"799","text":"777"},{"range":"800","text":"774"},{"range":"801","text":"777"},{"range":"802","text":"774"},"Update the dependencies array to be: [getProducts, history, user.password, user.username]",{"range":"803","text":"804"},{"range":"805","text":"783"},{"range":"806","text":"766"},{"range":"807","text":"777"},{"range":"808","text":"766"},{"range":"809","text":"797"},"Update the dependencies array to be: [getCustomersByPage, history, user.password, user.username]",{"range":"810","text":"811"},"Update the dependencies array to be: [getCustomerInfo]",{"range":"812","text":"813"},[1151,1165],"[getMedias, selectedFile]",[1544,1546],"[user]",[761,763],"[getImages, history]",[1077,1079],"[history]",[1009,1011],"[getData, history, id]",[585,587],[811,813],"[getPlaceById, id]",[631,633],[757,759],"[getMedias, history]",[669,671],[947,949],"[getData, history]",[1064,1066],[686,688],"[history, user.password, user.username]",[1620,1622],[938,940],"[getRoleById, history]",[753,755],[796,798],[1406,1408],[1151,1165],[761,763],[1077,1079],[1009,1011],[585,587],[1544,1546],[967,969],"[getData]",[684,686],[1399,1401],"[getMedias]",[669,671],[944,946],[1064,1066],[1620,1622],[757,759],[834,836],"[getProducts, history, user.password, user.username]",[938,940],[753,755],[1406,1408],[796,798],[874,876],[1305,1307],"[getCustomersByPage, history, user.password, user.username]",[1005,1007],"[getCustomerInfo]"]