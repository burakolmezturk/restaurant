[{"D:\\BilgeAdam\\backoffice\\src\\index.js":"1","D:\\BilgeAdam\\backoffice\\src\\App.js":"2","D:\\BilgeAdam\\backoffice\\src\\reportWebVitals.js":"3","D:\\BilgeAdam\\backoffice\\src\\contextApi\\contextApi.js":"4","D:\\BilgeAdam\\backoffice\\src\\components\\login\\login.js":"5","D:\\BilgeAdam\\backoffice\\src\\components\\header\\header.js":"6","D:\\BilgeAdam\\backoffice\\src\\contextApi\\ContextApi.js":"7","D:\\BilgeAdam\\backoffice\\src\\components\\media\\CreateMedia.js":"8","D:\\BilgeAdam\\backoffice\\src\\components\\header\\Header.js":"9","D:\\BilgeAdam\\backoffice\\src\\components\\login\\Login.js":"10","D:\\BilgeAdam\\backoffice\\src\\services\\MediaService.js":"11","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\CreateWaiter.js":"12","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\ListWaiter.js":"13","D:\\BilgeAdam\\backoffice\\src\\services\\WaiterService.js":"14","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\EditWaiter.js":"15","D:\\BilgeAdam\\backoffice\\src\\components\\place\\ListPlaces.js":"16","D:\\BilgeAdam\\backoffice\\src\\services\\PlaceService.js":"17","D:\\BilgeAdam\\backoffice\\src\\components\\place\\CreatePlace.js":"18","D:\\BilgeAdam\\backoffice\\src\\components\\place\\EditPlace.js":"19","D:\\BilgeAdam\\backoffice\\src\\components\\info\\Info.js":"20","D:\\BilgeAdam\\backoffice\\src\\services\\InfoService.js":"21","D:\\BilgeAdam\\backoffice\\src\\components\\category\\CreateCategory.js":"22","D:\\BilgeAdam\\backoffice\\src\\services\\CategoryService.js":"23","D:\\BilgeAdam\\backoffice\\src\\components\\category\\ListCategory.js":"24","D:\\BilgeAdam\\backoffice\\src\\components\\category\\EditCategory.js":"25","D:\\BilgeAdam\\backoffice\\src\\components\\product\\CreateProduct.js":"26","D:\\BilgeAdam\\backoffice\\src\\services\\ProductService.js":"27","D:\\BilgeAdam\\backoffice\\src\\components\\product\\ListProduct.js":"28","D:\\BilgeAdam\\backoffice\\src\\components\\product\\EditProduct.js":"29","D:\\BilgeAdam\\backoffice\\src\\components\\role\\CreateRole.js":"30","D:\\BilgeAdam\\backoffice\\src\\services\\RoleService.js":"31","D:\\BilgeAdam\\backoffice\\src\\components\\role\\ListRole.js":"32","D:\\BilgeAdam\\backoffice\\src\\components\\role\\EditRole.js":"33","D:\\BilgeAdam\\backoffice\\src\\components\\user\\CreateUser.js":"34","D:\\BilgeAdam\\backoffice\\src\\services\\UserService.js":"35","D:\\BilgeAdam\\backoffice\\src\\components\\user\\ListUser.js":"36","D:\\BilgeAdam\\backoffice\\src\\components\\user\\EditUser.js":"37","D:\\BilgeAdam\\backoffice\\src\\components\\loading\\Loading.js":"38"},{"size":563,"mtime":1608065594487,"results":"39","hashOfConfig":"40"},{"size":3094,"mtime":1608533571870,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":962,"mtime":1608099382809,"results":"43","hashOfConfig":"40"},{"size":2057,"mtime":1608071630471,"results":"44","hashOfConfig":"40"},{"size":2576,"mtime":1608101467038,"results":"45","hashOfConfig":"40"},{"size":1044,"mtime":1608485776509,"results":"46","hashOfConfig":"40"},{"size":3924,"mtime":1608491386771,"results":"47","hashOfConfig":"40"},{"size":2832,"mtime":1608482276661,"results":"48","hashOfConfig":"40"},{"size":3653,"mtime":1608484169657,"results":"49","hashOfConfig":"40"},{"size":658,"mtime":1608375159922,"results":"50","hashOfConfig":"40"},{"size":4721,"mtime":1608410561318,"results":"51","hashOfConfig":"40"},{"size":3830,"mtime":1608535055194,"results":"52","hashOfConfig":"40"},{"size":1471,"mtime":1608492717682,"results":"53","hashOfConfig":"40"},{"size":6060,"mtime":1608489872032,"results":"54","hashOfConfig":"40"},{"size":2951,"mtime":1608535025597,"results":"55","hashOfConfig":"40"},{"size":1449,"mtime":1608375159925,"results":"56","hashOfConfig":"40"},{"size":2168,"mtime":1608402761406,"results":"57","hashOfConfig":"40"},{"size":2729,"mtime":1608489496933,"results":"58","hashOfConfig":"40"},{"size":3007,"mtime":1608488843713,"results":"59","hashOfConfig":"40"},{"size":654,"mtime":1608492992234,"results":"60","hashOfConfig":"40"},{"size":3998,"mtime":1608411800098,"results":"61","hashOfConfig":"40"},{"size":1546,"mtime":1608375159914,"results":"62","hashOfConfig":"40"},{"size":3341,"mtime":1608535038887,"results":"63","hashOfConfig":"40"},{"size":4565,"mtime":1608489889161,"results":"64","hashOfConfig":"40"},{"size":6507,"mtime":1608415004640,"results":"65","hashOfConfig":"40"},{"size":1681,"mtime":1608455965967,"results":"66","hashOfConfig":"40"},{"size":4941,"mtime":1608534221909,"results":"67","hashOfConfig":"40"},{"size":7966,"mtime":1608489516489,"results":"68","hashOfConfig":"40"},{"size":1827,"mtime":1608457039073,"results":"69","hashOfConfig":"40"},{"size":1482,"mtime":1608375159928,"results":"70","hashOfConfig":"40"},{"size":3016,"mtime":1608489774524,"results":"71","hashOfConfig":"40"},{"size":2461,"mtime":1608489880520,"results":"72","hashOfConfig":"40"},{"size":4453,"mtime":1608459151116,"results":"73","hashOfConfig":"40"},{"size":1850,"mtime":1608375159957,"results":"74","hashOfConfig":"40"},{"size":3786,"mtime":1608490023716,"results":"75","hashOfConfig":"40"},{"size":6007,"mtime":1608489954046,"results":"76","hashOfConfig":"40"},{"size":441,"mtime":1608491838945,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1orjukh",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"80"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"80"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"D:\\BilgeAdam\\backoffice\\src\\index.js",[],["175","176"],"D:\\BilgeAdam\\backoffice\\src\\App.js",["177"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport './App.css';\nimport ContextProvider from './contextApi/ContextApi';\nimport LoginComponent from './components/login/Login';\nimport HeaderComponent from './components/header/Header';\nimport MediaComponent from './components/media/CreateMedia';\nimport CreateWaiterComponent from './components/waiter/CreateWaiter';\nimport ListWaiterComponent from './components/waiter/ListWaiter';\nimport EditWaiterComponent from './components/waiter/EditWaiter';\nimport ListPlace from \"./components/place/ListPlaces\";\nimport CreatePlace from \"./components/place/CreatePlace\";\nimport EditPlace from \"./components/place/EditPlace\";\nimport Info from \"./components/info/Info\";\nimport CreateCategory from \"./components/category/CreateCategory\";\nimport ListCategory from \"./components/category/ListCategory\";\nimport EditCategory from \"./components/category/EditCategory\";\nimport CreateProduct from \"./components/product/CreateProduct\";\nimport ListProduct from \"./components/product/ListProduct\";\nimport EditProduct from \"./components/product/EditProduct\";\nimport CreateRole from \"./components/role/CreateRole\";\nimport ListRole from \"./components/role/ListRole\";\nimport EditRole from \"./components/role/EditRole\";\nimport CreateUser from \"./components/user/CreateUser\";\nimport ListUser from \"./components/user/ListUser\";\nimport EditUser from \"./components/user/EditUser\";\nfunction App() {\n  return (\n    <ContextProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/update-user\" component={EditUser}></Route>\n          <Route path=\"/user\" component={ListUser}></Route>\n          <Route path=\"/add-user\" component={CreateUser}></Route>\n          <Route path=\"/update-role\" component={EditRole}></Route>\n          <Route path=\"/add-role\" component={CreateRole}></Route>\n          <Route path=\"/role\" component={ListRole}></Route>\n          <Route path=\"/update-product\" component={EditProduct}></Route>\n          <Route path=\"/product\" component={ListProduct}></Route>\n          <Route path=\"/add-product\" component={CreateProduct}></Route>\n          <Route path=\"/update-category\" component={EditCategory}></Route>\n          <Route path=\"/category\" component={ListCategory}></Route>\n          <Route path=\"/add-category\" component={CreateCategory}></Route>\n          <Route path=\"/info\" component={Info}></Route>\n          <Route path=\"/update-place\" component={EditPlace}></Route>\n          <Route path=\"/place\" component={ListPlace}></Route>\n          <Route path=\"/add-place\" component={CreatePlace}></Route>\n          <Route path=\"/media\" component={MediaComponent}></Route>\n          <Route path=\"/waiter\" component={ListWaiterComponent}></Route>\n          <Route path=\"/add-waiter\" component={CreateWaiterComponent}></Route>\n          <Route path=\"/update-waiter\" component={EditWaiterComponent}></Route>\n          <Route path=\"/\" component={LoginComponent}></Route>\n          <Route path=\"/login\" component={LoginComponent}></Route>\n\n        </Switch>\n\n\n      </Router>\n\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","D:\\BilgeAdam\\backoffice\\src\\reportWebVitals.js",[],"D:\\BilgeAdam\\backoffice\\src\\contextApi\\contextApi.js",["178","179"],"D:\\BilgeAdam\\backoffice\\src\\components\\login\\login.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\header\\header.js",["180"],"D:\\BilgeAdam\\backoffice\\src\\contextApi\\ContextApi.js",["181","182","183","184"],"import { createContext, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport const Context = createContext();\r\n\r\nconst ContextProvider = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        username: '', password: ''\r\n    })\r\n    const { username, password } = user;\r\n    const login = async (username, password) => {\r\n        const res = await axios.get(\"http://localhost:8080/user/login\", {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n\r\n        });\r\n        if (res.status == '200') {\r\n\r\n            setUser({ username: username, password:password});\r\n\r\n            // history.push(\"/category\");\r\n\r\n        } else {\r\n            console.log(\"hatalı giriş\");\r\n        }\r\n\r\n        return res;\r\n    }\r\n    return (\r\n\r\n        <Context.Provider value={{ user, login }}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n\r\n}\r\nexport default ContextProvider;","D:\\BilgeAdam\\backoffice\\src\\components\\media\\CreateMedia.js",["185","186","187","188"],"import { useEffect, useState, useRef } from 'react';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst CreateMedia = () => {\r\n\r\n    const ref = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [media, setMedia] = useState({\r\n        name: '', selectedFile: null, medias: []\r\n    })\r\n\r\n    const { name, selectedFile, medias } = media;\r\n\r\n    const uploadMedia = async (e) => {\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('file', selectedFile);\r\n        data.append('fileName', name);\r\n\r\n        await MediaService.createMedia(data).then(res => {\r\n            if (res.status = '200') {\r\n                ref.current.value = '';\r\n                setMedia({ ...media, selectedFile: null, name: '' });\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    const onNameChange = (e) => {\r\n\r\n        setMedia({ ...media, name: e.target.value });\r\n\r\n    }\r\n    const onFileChange = (e) => {\r\n\r\n        setMedia({ ...media, selectedFile: e.target.files[0] });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getMedias();\r\n\r\n    }, [selectedFile]);\r\n\r\n    async function getMedias() {\r\n        const res = await MediaService.getMedias();\r\n        setMedia({ ...media, medias: res.data });\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card\" style={{ height: \"40rem\" }}>\r\n                                    <h4 style={{ paddingLeft: 20 }}>Media Add</h4>\r\n                                    <div className=\"card-body\">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label>File :</label>\r\n                                            <input type=\"file\" name=\"selectedFile\" ref={ref} style={{ paddingTop: 20 }} onChange={(e) => onFileChange(e)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>File Name :</label>\r\n                                            <input placeholder=\"File Name\" name=\"name\" className=\"form-control\"\r\n                                                value={name} onChange={onNameChange} />\r\n                                        </div>\r\n                                        <button className=\"btn btn-success\" onClick={uploadMedia}>Save</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <div className=\"card\" style={{ height: \"40rem\", overflow: \"auto\" }}>\r\n                                    <h4 style={{ paddingLeft: 20 }}>Media List</h4>\r\n                                    <div className=\"row\">\r\n\r\n                                        {\r\n                                            medias.map(\r\n                                                media =>\r\n                                                    <div className=\"card-body col-4\">\r\n                                                        <img src={'data:image/png;base64,' + media.fileContent} width=\"150\" />\r\n                                                    </div>\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\nexport default CreateMedia;","D:\\BilgeAdam\\backoffice\\src\\components\\header\\Header.js",["189","190","191","192","193","194","195","196","197","198"],"import { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n\r\n    function logout(e) {\r\n        e.preventDefault();\r\n        history.push(\"/\")\r\n\r\n\r\n    }\r\n    function goPage(url){\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                <a className=\"navbar-brand\" href=\"#\">Admin Control</a>\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" onClick={()=>goPage(\"/product\")} href=\"#\" >Products<span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/user\")}>Users</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/category\")}>Categories</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/place\")} >Places</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/waiter\")} >Waiter</a>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\"  onClick={()=>goPage(\"/user\")} >Reports</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/role\")} >Roles</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/media\")} >Media</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>goPage(\"/info\")} >Info</a>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={logout}>Logout</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Header;","D:\\BilgeAdam\\backoffice\\src\\components\\login\\Login.js",["199","200"],"import { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../contextApi/ContextApi';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const { login } = useContext(Context);\r\n\r\n    const [user, setUser] = useState({\r\n\r\n        username: '', password: ''\r\n    })\r\n    const [checked, setChecked] = useState(false);\r\n    const { username, password } = user;\r\n\r\n    const onChange = (e) => {\r\n\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n    const loginApi =  async (e) => { \r\n        e.preventDefault();\r\n        console.log('girdi1');\r\n       const res = await login(username, password);\r\n       \r\n       console.log(res)\r\n       \r\n       if(res.status=='200'){\r\n           \r\n            if (checked === true) {\r\n                let remember = { username: username, password: password }\r\n                localStorage.setItem(\"rememberMe\", JSON.stringify(remember));\r\n            } else {\r\n                localStorage.removeItem(\"rememberMe\");\r\n            }\r\n            history.push(`/product`)\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n    }\r\n    const changeCheckedHandler = (event) => {\r\n        setChecked(event.target.checked);\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"rememberMe\") !== null) {\r\n\r\n            const rememberMe = JSON.parse(localStorage.getItem(\"rememberMe\"));\r\n            setUser({ ...user, username: rememberMe.username, password: rememberMe.password });\r\n        }\r\n    }, [])\r\n    const loadCheckBox = () => {\r\n\r\n        const checkbox = [];\r\n        if (localStorage.getItem(\"rememberMe\") !== null) {\r\n\r\n            checkbox.push(\r\n                <label><input type=\"checkbox\" defaultChecked=\"true\" onChange={changeCheckedHandler} />Remember Me</label>\r\n            );\r\n\r\n\r\n\r\n        } else {\r\n\r\n            checkbox.push(\r\n                <label><input type=\"checkbox\" onChange={changeCheckedHandler} />Remember Me</label>\r\n            );\r\n        }\r\n        return checkbox;\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"login-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Login</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label> Username </label>\r\n                                        <input placeholder=\"username\" name=\"username\" className=\"form-control\"\r\n                                            value={username} onChange={(e) => onChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label> Password </label>\r\n                                        <input type=\"password\" placeholder=\"password\" name=\"password\" className=\"form-control\"\r\n                                            value={password} onChange={(e) => onChange(e)} />\r\n                                    </div>\r\n                                    {loadCheckBox()}\r\n                                    <br /> <button className=\"btn btn-success\" onClick={loginApi}>Login</button>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","D:\\BilgeAdam\\backoffice\\src\\services\\MediaService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\CreateWaiter.js",["201","202"],"import { useEffect, useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MediaService from '../../services/MediaService';\r\nimport WaiterService from '../../services/WaiterService';\r\nimport HeaderComponent from '../header/Header';\r\nconst CreateWaite = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [waiter, setWaiter] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        age: 0,\r\n        medias: [],\r\n        image: []\r\n    });\r\n\r\n    const { name, email, phone, age, medias, image } = waiter;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getImages();\r\n\r\n    }, []);\r\n\r\n    async function getImages() {\r\n        const res = await MediaService.getMedias()\r\n        await setWaiter({ ...waiter, medias: res.data, image: res.data[0] });\r\n\r\n    }\r\n\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/waiter')\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setWaiter({ ...waiter, [e.target.name]: e.target.value });\r\n    }\r\n    const onChangeImage = (e) => {\r\n        setWaiter({ ...waiter, image: medias[e.target.value] });\r\n    }\r\n\r\n    const saveWaiter = async (e) => {\r\n        \r\n        e.preventDefault();\r\n        await WaiterService.createWaiter(waiter);\r\n        history.push('/waiter');\r\n        \r\n    }\r\n    return (\r\n        <>\r\n\r\n        <div>\r\n        <HeaderComponent/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Waiter</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Name :</label>\r\n                                    <input placeholder=\"Waiter Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Age :</label>\r\n                                    <input placeholder=\"Waiter Age\" name=\"age\" className=\"form-control\"\r\n                                        value={age} onChange={onChange} type=\"number\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Email :</label>\r\n                                    <input placeholder=\"Waiter Email\" name=\"email\" className=\"form-control\"\r\n                                        value={email} onChange={onChange} type=\"email\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Waiter Phone :</label>\r\n                                    <input placeholder=\"Waiter Phone\" name=\"phone\" className=\"form-control\"\r\n                                        value={phone} onChange={onChange} type=\"number\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e)=>saveWaiter(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={()=>cancel} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        </>)\r\n}\r\nexport default CreateWaite;","D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\ListWaiter.js",["203","204","205"],"D:\\BilgeAdam\\backoffice\\src\\services\\WaiterService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\waiter\\EditWaiter.js",["206","207","208","209","210","211","212"],"import { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MediaService from '../../services/MediaService';\r\nimport WaiterService from '../../services/WaiterService';\r\nimport HeaderComponent from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditWaiter = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [waiter, setWaiter] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        age: 0,\r\n        imageId: history.location.state?.imageId,\r\n        medias: [],\r\n        image: []\r\n    });\r\n\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    const { id, name, email, phone, age, imageId, image } = waiter;\r\n\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getData(id);\r\n\r\n    }, []);\r\n\r\n    async function getData(id) {\r\n\r\n        const media = await MediaService.getMedias();\r\n        if (media.status == '200') {\r\n            setMedias(media.data);\r\n        }\r\n\r\n        const res = await WaiterService.getWaiterById(id);\r\n        if (res.status == '200') {\r\n            const info = res.data;\r\n            setWaiter({\r\n                ...waiter,\r\n                id: info.id,\r\n                name: info.name,\r\n                email: info.email,\r\n                phone: info.phone,\r\n                age: info.age,\r\n                image: info.image,\r\n\r\n            });\r\n\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    async function updateWaiter(e) {\r\n        e.preventDefault();\r\n\r\n        let waiter = { id: id, name: name, email: email, phone: phone, age: age, image: image };\r\n\r\n        await WaiterService.updateWaiter(waiter)\r\n        history.push('/waiter');\r\n\r\n\r\n    }\r\n    const cancel = (e) => {\r\n        e.preventDefault();\r\n        history.push('/waiter')\r\n    }\r\n\r\n    const onChangeInputs = (e) => {\r\n        setWaiter({ ...waiter, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setWaiter({ ...waiter, image: medias[e.target.value] });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <HeaderComponent />\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className=\"text-canter\">Edit Waiter</h3>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Name :</label>\r\n                                            <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                                                value={name} onChange={onChangeInputs} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Age :</label>\r\n                                            <input placeholder=\"Age\" name=\"age\" className=\"form-control\"\r\n                                                value={age} onChange={onChangeInputs} type=\"number\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Email :</label>\r\n                                            <input placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                                value={email} onChange={onChangeInputs} type=\"email\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Phone :</label>\r\n                                            <input placeholder=\"name\" name=\"name\" className=\"form-control\"\r\n                                                value={phone} onChange={onChangeInputs} type=\"number\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Waiter Image :</label>\r\n                                            <select\r\n                                                className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                                {\r\n                                                    medias.map(\r\n                                                        (media, index) =>\r\n\r\n                                                            <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                            {showImage()}\r\n\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-success\" onClick={(e) => updateWaiter(e)}>Save</button>\r\n                                        <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={(e) => cancel(e)} >Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default EditWaiter;\r\n","D:\\BilgeAdam\\backoffice\\src\\components\\place\\ListPlaces.js",["213","214","215"],"D:\\BilgeAdam\\backoffice\\src\\services\\PlaceService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\place\\CreatePlace.js",["216"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlaceService from '../../services/PlaceService';\r\nimport Header from '../header/Header';\r\n\r\nconst CreatePlace = () => {\r\n    const history = useHistory();\r\n    const [place, setPlace] = useState({\r\n        name: '', tableCount: 0\r\n    })\r\n    const { name, tableCount } = place;\r\n\r\n    const onChangeHandler=(e)=> {\r\n        setPlace({ ...place, [e.target.name]: e.target.value });\r\n    }\r\n    const savePlace=()=> {\r\n        PlaceService.createPlace(place);\r\n        history.push(`/place`);\r\n    }\r\n \r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Category</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Place Name :</label>\r\n                                    <input placeholder=\"Place Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Table Count :</label>\r\n                                    <input placeholder=\"Table Count\" name=\"tableCount\" className=\"form-control\"\r\n                                        value={tableCount} onChange={onChangeHandler} />\r\n                                </div>\r\n\r\n\r\n                                <button className=\"btn btn-success\" onClick={()=>savePlace()}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={()=>history.push(`/place`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>)\r\n}\r\nexport default CreatePlace;","D:\\BilgeAdam\\backoffice\\src\\components\\place\\EditPlace.js",["217","218"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlaceService from '../../services/PlaceService';\r\nimport Loading from '../loading/Loading';\r\n\r\n\r\nconst EditPlace = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [place, setPlace] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        tableCount: 0\r\n    });\r\n\r\n    const { id, name, tableCount } = place;\r\n\r\n    const onChangeHandler = (e) => {\r\n        setPlace({ ...place, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const editPlace = () => {\r\n        PlaceService.updatePlace(place);\r\n        history.push(`/place`);\r\n    }\r\n    useEffect(() => {\r\n        console.log('girdi'+id);\r\n        getPlaceById();\r\n    }, [])\r\n\r\n    async function getPlaceById() {\r\n        const res = await PlaceService.getPlaceById(id);\r\n       await setPlace({\r\n            ...place,\r\n            name: res.data.name,\r\n            tableCount: res.data.tableCount\r\n        });\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <div>\r\n            {loading==true? <Loading/> :\r\n           <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Place</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Place Name :</label>\r\n                                    <input placeholder=\"Place Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Table Count :</label>\r\n                                    <input placeholder=\"Table Count\" name=\"tableCount\" className=\"form-control\"\r\n                                        value={tableCount} onChange={onChangeHandler} />\r\n                                </div>\r\n\r\n\r\n                                <button className=\"btn btn-success\" onClick={() => editPlace()}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/place`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default EditPlace;","D:\\BilgeAdam\\backoffice\\src\\components\\info\\Info.js",["219","220"],"import { useEffect, useState } from 'react';\r\nimport InfoService from '../../services/InfoService'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst Info = () => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    const [info, setInfo] = useState([]);\r\n    const [profile, setProfile] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getData();\r\n\r\n    }, []);\r\n    async function getData() {\r\n        const resInfo = await InfoService.getInfo();\r\n        setInfo(resInfo.data);\r\n        const resProfile = await InfoService.getProfileInfo();\r\n        await setProfile(resProfile.data);\r\n        setLoading(false);\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n          {loading==true? <Loading/> :\r\n           <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Properties Info</h2>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Key</th>\r\n                                <th>Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                info.map(\r\n                                    info =>\r\n                                        <tr >\r\n                                            <td >{info.key}</td>\r\n                                            <td >{info.value}</td>\r\n\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <h2 className=\"text-center\">Profile Info</h2>\r\n                    <table className=\"table table-striped table bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Key</th>\r\n                                <th>Value</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                profile.map(\r\n                                    profile =>\r\n                                        <tr >\r\n                                            <td >{profile.key}</td>\r\n                                            <td >{profile.value}</td>\r\n\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            }\r\n        </>\r\n        )\r\n}\r\nexport default Info;","D:\\BilgeAdam\\backoffice\\src\\services\\InfoService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\category\\CreateCategory.js",["221","222"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nconst CreateCategory = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [category, setCategory] = useState({\r\n        name: '',\r\n        description: '',\r\n        image: []\r\n    });\r\n\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    const { name, description, image } = category;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        \r\n        getMedias();\r\n\r\n    }, []);\r\n    \r\n    async function getMedias() {\r\n        \r\n        const res = await MediaService.getMedias();\r\n\r\n        await setMedias(res.data);\r\n\r\n        setCategory({ ...category, image: res.data[0] });\r\n\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    }\r\n   \r\n    const onChangeImage = (e) => {\r\n        setCategory({ ...category, image: medias[e.target.value] });\r\n    }\r\n\r\n    const saveCategory = async (e) => {\r\n        e.preventDefault();\r\n        await CategoryService.createCategory(category);\r\n        history.push(`/category`);\r\n    }\r\n\r\n    const showImage =  () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Category</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Name :</label>\r\n                                    <input placeholder=\"Category Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Description :</label>\r\n                                    <input placeholder=\"Category Description\" name=\"description\" className=\"form-control\"\r\n                                        value={description} onChange={onChangeHandler} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e) => saveCategory(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/category`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>)\r\n}\r\nexport default CreateCategory;","D:\\BilgeAdam\\backoffice\\src\\services\\CategoryService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\category\\ListCategory.js",["223","224","225","226"],"D:\\BilgeAdam\\backoffice\\src\\components\\category\\EditCategory.js",["227","228","229","230"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditCategory = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    const [category, setCategory] = useState({\r\n\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        description: '',\r\n        imageId: history.location.state?.imageId,\r\n        image: []\r\n\r\n    });\r\n\r\n    const { id, name, description, image, imageId } = category;\r\n\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }   \r\n        getData();\r\n\r\n    }, []);\r\n\r\n    async function getData(){\r\n\r\n        const res = await CategoryService.getCategoryById(id);\r\n        const resMedias = await MediaService.getMedias();\r\n       \r\n        await setMedias(resMedias.data);\r\n        await setCategory({\r\n            ...category,\r\n            name: res.data.name,\r\n            description: res.data.description,\r\n            image: res.data.image,\r\n            imageId: history.location.state?.imageId\r\n        });\r\n        setLoading(false);\r\n\r\n              \r\n    }\r\n \r\n    const showImage = () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n    const onChangeHandler = (e) => {\r\n\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setCategory({ ...category, image: medias[e.target.value] });\r\n    }\r\n\r\n    const updateCategory = async (e) => {\r\n        e.preventDefault();\r\n        await CategoryService.updateCategory(category);\r\n        history.push(`/category`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading==true? <Loading/> :\r\n           <div>\r\n            <Header/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Category</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Name :</label>\r\n                                    <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Description :</label>\r\n                                    <input placeholder=\"Category\" name=\"description\" className=\"form-control\"\r\n                                        value={description} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Category Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-success\" onClick={(e) => updateCategory(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/category`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>)\r\n}\r\nexport default EditCategory;","D:\\BilgeAdam\\backoffice\\src\\components\\product\\CreateProduct.js",["231","232","233","234"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProductService from '../../services/ProductService';\r\nimport MediaService from '../../services/MediaService';\r\nimport Header from '../header/Header';\r\nimport CategoryService from '../../services/CategoryService';\r\n\r\n\r\nconst CreateProduct = () => {\r\n    const history = useHistory();\r\n    const [product, setProduct] = useState({\r\n        name: '',\r\n        description: '',\r\n        categoryId: 0,\r\n        salesPrice: 0,\r\n        purchasePrice: 0,\r\n        image: []\r\n    });\r\n    const { name, description, categoryId, salesPrice, purchasePrice, image } = product;\r\n\r\n    const [multiCategories, setMultiCategories] = useState([]);\r\n    const [medias, setMedias] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getMedias();\r\n        getCategories();\r\n\r\n    }, []);\r\n\r\n    async function getMedias() {\r\n\r\n        const res = await MediaService.getMedias();\r\n\r\n        await setMedias(res.data);\r\n\r\n        setProduct({ ...product, image: res.data[0] });\r\n\r\n    }\r\n    async function getCategories(){\r\n        const res = await CategoryService.getCategory();\r\n        setCategories(res.data);\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setProduct({ ...product, image: medias[e.target.value] });\r\n    }\r\n    const changeMultiCate = (id) => {\r\n        if (multiCategories.includes(id) !== true) {\r\n            multiCategories.push(id);\r\n        } else {\r\n            for (let i = 0; i < multiCategories.length; i++) {\r\n                if (id === multiCategories[i]) {\r\n                    multiCategories.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const saveProduct = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let product = {\r\n            name: name, description: description, category: multiCategories,\r\n            salesPrice: salesPrice, purchasePrice: purchasePrice,image:image\r\n        };\r\n\r\n       await ProductService.createProduct(product);\r\n       history.push('/product');\r\n    }\r\n    const showImage =  () => {\r\n\r\n        const html = [];\r\n        const images = image;\r\n\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n\r\n    }\r\n\r\n    return (<div>\r\n        <Header />\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <h3 className=\"text-canter\">Add Product</h3>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Name :</label>\r\n                                <input placeholder=\"Product Name\" name=\"name\" className=\"form-control\"\r\n                                    value={name} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Description :</label>\r\n                                <input placeholder=\"Product Description\" name=\"description\" className=\"form-control\"\r\n                                    value={description} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Category :</label>\r\n                                <div className=\"row col-md-12\">\r\n                                    <div className=\"checkbox\" style={{ height: \"10rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                        {\r\n                                            categories.map(\r\n                                                category =>\r\n                                                    <div className=\"row col-md -12\">\r\n                                                        <label><input type=\"checkbox\" value=\"\" onClick={() => changeMultiCate(category.id)} />{category.name}</label>\r\n                                                    </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Sales Price :</label>\r\n                                <input placeholder=\"Sales Price\" name=\"salesPrice\" className=\"form-control\"\r\n                                    value={salesPrice} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Purchase Price :</label>\r\n                                <input placeholder=\"Purchase Price\" name=\"purchasePrice\" className=\"form-control\"\r\n                                    value={purchasePrice} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Image :</label>\r\n                                <select\r\n                                    className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                    {\r\n                                        medias.map(\r\n                                            (media, index) =>\r\n\r\n                                                <option key={media.id} value={index}>{media.fileName}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                {showImage()}\r\n                            </div>\r\n                            <button className=\"btn btn-success\" onClick={(e) => saveProduct(e)}>Save</button>\r\n                            <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/product`)} >Cancel</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default CreateProduct;","D:\\BilgeAdam\\backoffice\\src\\services\\ProductService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\product\\ListProduct.js",["235","236","237","238","239","240"],"D:\\BilgeAdam\\backoffice\\src\\components\\product\\EditProduct.js",["241","242","243","244","245"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategoryService from '../../services/CategoryService';\r\nimport MediaService from '../../services/MediaService';\r\nimport ProductService from '../../services/ProductService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditProduct = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [product, setProduct] = useState({\r\n        id: history.location.state?.id,\r\n        name: '',\r\n        description: '',\r\n        categoryId: history.location.state?.catId,\r\n        salesPrice: 0,\r\n        purchasePrice: 0,\r\n        imageId: history.location.state?.imageId,\r\n        image: []\r\n    });\r\n    const { id, name, description, categoryId, salesPrice, purchasePrice, image, imageId } = product;\r\n\r\n    const [categoryIdList, setCategoryIdList] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [medias, setMedias] = useState([]);\r\n\r\n    const changeMultiCate = (id) => {\r\n\r\n        if (categoryIdList.includes(id) !== true) {\r\n            categoryIdList.push(id);\r\n\r\n        } else {\r\n            for (let i = 0; i < categoryIdList.length; i++) {\r\n                if (id === categoryIdList[i]) {\r\n                    categoryIdList.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getData();\r\n    },[]);\r\n\r\n    const showImage = () => {\r\n        const html = [];\r\n        const images = image\r\n        html.push(<img src={'data:image/png;base64,' + images.fileContent} width=\"50\" />)\r\n        return html;\r\n    }\r\n    async function getData() {\r\n\r\n        const resMedia = await MediaService.getMedias();\r\n        await setMedias(resMedia.data);\r\n\r\n        const resProd = await ProductService.getProductById(id);\r\n        await setProduct({\r\n            ...product,\r\n            name: resProd.data.name,\r\n            description: resProd.data.description,\r\n            salesPrice: resProd.data.salesPrice,\r\n            purchasePrice: resProd.data.purchasePrice,\r\n            image: resProd.data.image\r\n\r\n        });\r\n        await setCategoryIdList(resProd.data.categoryIdList);\r\n        const resCat = await CategoryService.getCategory();\r\n      await  setCategories(resCat.data);\r\n      setLoading(false);\r\n\r\n\r\n    }\r\n\r\n    const onChangeHandler = (e) => { \r\n        console.log('girdi')   \r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        setProduct({ ...product, image: medias[e.target.value] });\r\n    }\r\n    const updateProduct = async (e) => {\r\n        e.preventDefault();\r\n        let product = {\r\n            id: id, name: name, description: description,\r\n            salesPrice: salesPrice, purchasePrice: purchasePrice, categoryIdList: categoryIdList, image: image\r\n        };\r\n        await ProductService.updateProduct(product,0);\r\n        history.push(`/product`);\r\n    }\r\n    const checkBox = () => {\r\n\r\n        const multiSelect = [];\r\n        let info = false;\r\n        categories.forEach(category => {\r\n            categoryIdList.forEach(id => {\r\n                if (id === category.id) {\r\n                    multiSelect.push(\r\n                        <div className=\"row col-md -12\">\r\n                            <label><input type=\"checkbox\" onChange={() => changeMultiCate(category.id)} defaultChecked=\"true\" />{category.name}</label>\r\n                        </div>)\r\n                    info = true;\r\n                }\r\n            });\r\n\r\n\r\n            if (info === false) {\r\n\r\n                multiSelect.push(\r\n                    <div className=\"row col-md -12\">\r\n                        <label><input type=\"checkbox\" onChange={() => changeMultiCate(category.id)} />{category.name}</label>\r\n                    </div>)\r\n                info = true;\r\n\r\n            }\r\n            info = false;\r\n\r\n        });\r\n        return multiSelect;\r\n    }\r\n    return (\r\n        <div>\r\n            {loading==true? <Loading/> :\r\n           <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Edit Product</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Product Name :</label>\r\n                                    <input placeholder=\"Product Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Product Description :</label>\r\n                                    <input placeholder=\"Product Description\" name=\"description\" className=\"form-control\"\r\n                                        value={description} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row col-md-12\">\r\n                                        <label>Product categories :</label>\r\n                                        <div className=\"checkbox  form-control\" style={{ height: \"6rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                            {checkBox()}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Sales Price :</label>\r\n                                    <input placeholder=\"Sales Price\" name=\"salesPrice\" className=\"form-control\"\r\n                                        value={salesPrice} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Purchase Price :</label>\r\n                                    <input placeholder=\"Purchase Price\" name=\"purchasePrice\" className=\"form-control\"\r\n                                        value={purchasePrice} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Product Image :</label>\r\n                                    <select\r\n                                        className=\"form-control\" id=\"option\" onChange={onChangeImage} >\r\n                                        {\r\n                                            medias.map(\r\n                                                (media, index) =>\r\n\r\n                                                    <option key={media.id} selected={imageId == media.id} value={index}>{media.fileName}</option>\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {showImage()}\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e) => updateProduct(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/product`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            }\r\n        </div>);\r\n}\r\nexport default EditProduct;","D:\\BilgeAdam\\backoffice\\src\\components\\role\\CreateRole.js",["246","247"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport Header from '../header/Header';\r\nconst CreateRole = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n\r\n\r\n    const changeNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const saveRole = async (e) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        const role = { name: name };\r\n        const res = await RoleService.createRole(role);\r\n        if(res.status=='200'){\r\n            history.push(`/role`);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add Role</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Role Name :</label>\r\n                                    <input placeholder=\"Role Name\" name=\"name\" className=\"form-control\"\r\n                                        value={name} onChange={changeNameHandler} />\r\n                                </div>\r\n\r\n\r\n                                <button className=\"btn btn-success\" onClick={saveRole}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/role`)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>);\r\n}\r\nexport default CreateRole;","D:\\BilgeAdam\\backoffice\\src\\services\\RoleService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\role\\ListRole.js",["248"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\n\r\nconst ListRole = () => {\r\n\r\n    const history = useHistory();\r\n    const [roles, setRoles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            this.props.history.push('')\r\n        }\r\n\r\n        getRoles();\r\n\r\n    }, []);\r\n    async function getRoles() {\r\n        const res = await RoleService.getRoles();\r\n        await setRoles(res.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    const editRole = (id) => {\r\n        history.push({\r\n            pathname: '/update-role',\r\n            state: {\r\n                id: id\r\n            }\r\n        });\r\n    }\r\n    const deleteRole = async (roleDTO) => {\r\n        await RoleService.deleteRole(roleDTO);\r\n        setRoles(roles.filter(role => role.id !== roleDTO.id))\r\n    }\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading/> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n\r\n                        <h2 className=\"text-center\">Role List</h2>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-primary\" onClick={() => history.push('/add-role')}>Add Role</button>\r\n                            <table className=\"table table-striped table bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Role Name</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        roles.map(\r\n                                            role =>\r\n                                                <tr key={role.id} >\r\n                                                    <td >{role.name}</td>\r\n                                                    <td >\r\n                                                        <button onClick={() => editRole(role.id)} className=\"btn btn-info\">Edit</button>\r\n                                                        <button style={{ marginLeft: \"10px\" }} onClick={() => deleteRole(role)} className=\"btn btn-danger\" >Delete</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>);\r\n}\r\nexport default ListRole;","D:\\BilgeAdam\\backoffice\\src\\components\\role\\EditRole.js",["249","250"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditRole = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [role, setRole] = useState({\r\n        id: history.location.state?.id,\r\n        name: ''\r\n    });\r\n    const { id, name } = role;\r\n\r\n    const changeNameHandler = (e) => {\r\n        setRole({ ...role, name: e.target.value });\r\n    }\r\n    const updateRole = async (e) => {\r\n        e.preventDefault();\r\n        await RoleService.updateRole(role);\r\n        history.push(`/role`);\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getRoleById();\r\n    }, []);\r\n\r\n    async function getRoleById() {\r\n        const res = await RoleService.getRoleById(id);\r\n        await setRole({ ...role, name: res.data.name });\r\n        setLoading(false);\r\n    }\r\n    return (<div>\r\n        {loading == true ? <Loading/> :\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-canter\">Edit Role</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Role Name :</label>\r\n                                        <input placeholder=\"Role Name\" name=\"name\" className=\"form-control\"\r\n                                            value={name} onChange={changeNameHandler} />\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={(e) => updateRole(e)}>Save</button>\r\n                                    <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/role`)} >Cancel</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>)\r\n}\r\nexport default EditRole;","D:\\BilgeAdam\\backoffice\\src\\components\\user\\CreateUser.js",["251"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport UserService from '../../services/UserService';\r\nimport Header from '../header/Header';\r\n\r\nconst CreateUser = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        userName: '',\r\n        password: '',\r\n        email:''\r\n    });\r\n\r\n    const { userName, password , email } = user\r\n    const [roleId] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n\r\n        getRoles();\r\n    }, []);\r\n    async function getRoles() {\r\n        const res = await RoleService.getRoles();\r\n        setRoles(res.data);\r\n    }\r\n    const saveUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = { userName: userName, password: password, rolesId: roleId ,enabled:true , email:email};\r\n\r\n        await UserService.createUser(user);\r\n        history.push('/user');\r\n    }\r\n    const onChangeHandler = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const changeMultiCate = (id) => {\r\n        if (roleId.includes(id) !== true) {\r\n            roleId.push(id);\r\n        } else {\r\n            for (let i = 0; i < roleId.length; i++) {\r\n                if (id === roleId[i]) {\r\n                    roleId.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-canter\">Add User</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Username :</label>\r\n                                    <input placeholder=\"Username\" name=\"userName\" className=\"form-control\"\r\n                                        value={userName} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Password :</label>\r\n                                    <input placeholder=\"Password\" name=\"password\" className=\"form-control\"\r\n                                        value={password} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email :</label>\r\n                                    <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                        value={email} onChange={onChangeHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row col-md-12\">\r\n                                        <div className=\"checkbox\" style={{ height: \"10rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                            {\r\n                                                roles.map(\r\n                                                    role =>\r\n                                                        <div className=\"row col-md -12\">\r\n                                                            <label><input type=\"checkbox\" value=\"\" onClick={() => changeMultiCate(role.id)} />{role.name}</label>\r\n                                                        </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={(e) => saveUser(e)}>Save</button>\r\n                                <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push('/user')} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\nexport default CreateUser;","D:\\BilgeAdam\\backoffice\\src\\services\\UserService.js",[],"D:\\BilgeAdam\\backoffice\\src\\components\\user\\ListUser.js",["252","253","254","255"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport UserService from '../../services/UserService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\nconst ListUser = () => {\r\n\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    async function getUsers() {\r\n        const res = await UserService.getUsers();\r\n        await setUsers(res.data);\r\n        setLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('');\r\n        }\r\n        getUsers();\r\n    }, []);\r\n    const editUser = (id) => {\r\n        history.push({\r\n            pathname: '/update-user',\r\n            state: {\r\n                id: id\r\n            }\r\n        });\r\n    }\r\n    const deleteUser = async (id) => {\r\n        await UserService.deleteUser(id);\r\n         setUsers(users.filter(user => user.id !== id));\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            {loading == true ? <Loading /> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <h2 className=\"text-center\">User List</h2>\r\n                        <div className=\"row\">\r\n                            <button className=\"btn btn-primary\" onClick={() => history.push(`/add-user`)}>Add User</button>\r\n                            <table className=\"table table-striped table bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Username</th>\r\n                                        <th>Email</th>\r\n                                        <th>Role</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.map(\r\n                                            user =>\r\n                                                <tr key={user.id} >\r\n                                                    <td >{user.userName}</td>\r\n                                                    <td >{user.email}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            user.rolesList.map(\r\n                                                                role =>\r\n                                                                    <a href=\"#\">{role.name} </a>\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td >\r\n                                                        <button onClick={() => editUser(user.id)} className=\"btn btn-info\">Edit</button>\r\n                                                        <button style={{ marginLeft: \"10px\" }} onClick={() => deleteUser(user.id)} className=\"btn btn-danger\" >Delete</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ListUser;","D:\\BilgeAdam\\backoffice\\src\\components\\user\\EditUser.js",["256","257"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleService from '../../services/RoleService';\r\nimport UserService from '../../services/UserService';\r\nimport Header from '../header/Header';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst EditUser = () => {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({\r\n        id: history.location.state?.id,\r\n        userName: '',\r\n        password: '',\r\n        email: ''\r\n    });\r\n    const [roleId, setRoleId] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [roles, setRoles] = useState([]);\r\n\r\n    const { id, userName, password, email } = user;\r\n\r\n    async function getData() {\r\n\r\n\r\n        const resUsers = await UserService.getUserById(id);\r\n        await setUser({\r\n            ...user,\r\n            userName: resUsers.data.userName,\r\n            password: resUsers.data.password,\r\n            email: resUsers.data.email,\r\n            enabled: resUsers.data.enabled,\r\n\r\n        });\r\n\r\n        setRoleId(resUsers.data.rolesId);\r\n\r\n        const res = await RoleService.getRoles();\r\n        await setRoles(res.data);\r\n        setLoading(false);\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"username\") == null && localStorage.getItem(\"password\") == null) {\r\n            history.push('')\r\n        }\r\n        getData();\r\n    }, []);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const changeMultiRole = (id) => {\r\n        if (roleId.includes(id) !== true) {\r\n            roleId.push(id);\r\n        } else {\r\n            for (let i = 0; i < roleId.length; i++) {\r\n                if (id === roleId[i]) {\r\n                    roleId.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = { id: id, userName: userName, password: password, rolesId: roleId, enabled: true, email: email };\r\n\r\n        UserService.updateUser(user).then(res => {\r\n            this.props.history.push('/user');\r\n\r\n        })\r\n    }\r\n\r\n    const checkBox = () => {\r\n        console.log(roleId);\r\n        const multiSelect = [];\r\n        let info = false;\r\n        roles.forEach(role => {\r\n            roleId.forEach(id => {\r\n                if (id === role.id) {\r\n                    multiSelect.push(\r\n                        <div className=\"row col-md -12\">\r\n                            <label><input type=\"checkbox\" onChange={() => changeMultiRole(role.id)} defaultChecked=\"true\" />{role.name}</label>\r\n                        </div>)\r\n                    info = true;\r\n                }\r\n            });\r\n\r\n\r\n            if (info === false) {\r\n\r\n                multiSelect.push(\r\n                    <div className=\"row col-md -12\">\r\n                        <label><input type=\"checkbox\" onChange={() => changeMultiRole(role.id)} />{role.name}</label>\r\n                    </div>)\r\n                info = true;\r\n\r\n            }\r\n            info = false;\r\n\r\n        });\r\n        return multiSelect;\r\n    }\r\n    return (\r\n        <div>\r\n            {loading == true ? <Loading/> :\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className=\"text-canter\">Edit User</h3>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Username :</label>\r\n                                            <input placeholder=\"Username\" name=\"name\" className=\"form-control\"\r\n                                                value={userName} onChange={onChangeHandler} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Password :</label>\r\n                                            <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"form-control\"\r\n                                                value={password} onChange={onChangeHandler} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email :</label>\r\n                                            <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                                value={email} onChange={onChangeHandler} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"row col-md-12\">\r\n                                                <div className=\"checkbox\" style={{ height: \"10rem\", width: \"80rem\", overflow: \"auto\" }}>\r\n                                                    {\r\n                                                        checkBox()\r\n                                                    }\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <button className=\"btn btn-success\" onClick={(e) => updateUser(e)}>Save</button>\r\n                                        <button style={{ marginLeft: \"10px\" }} className=\"btn btn-danger\" onClick={() => history.push(`/user`)} >Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>)\r\n}\r\nexport default EditUser;","D:\\BilgeAdam\\backoffice\\src\\components\\loading\\Loading.js",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":5,"column":8,"nodeType":"264","messageId":"265","endLine":5,"endColumn":23},{"ruleId":"262","severity":1,"message":"266","line":9,"column":9,"nodeType":"264","messageId":"265","endLine":9,"endColumn":16},{"ruleId":"267","severity":1,"message":"268","line":23,"column":24,"nodeType":"269","messageId":"270","endLine":23,"endColumn":26},{"ruleId":"271","severity":1,"message":"272","line":22,"column":17,"nodeType":"273","endLine":22,"endColumn":54},{"ruleId":"262","severity":1,"message":"266","line":9,"column":9,"nodeType":"264","messageId":"265","endLine":9,"endColumn":16},{"ruleId":"262","severity":1,"message":"274","line":14,"column":13,"nodeType":"264","messageId":"265","endLine":14,"endColumn":21},{"ruleId":"262","severity":1,"message":"275","line":14,"column":23,"nodeType":"264","messageId":"265","endLine":14,"endColumn":31},{"ruleId":"267","severity":1,"message":"268","line":23,"column":24,"nodeType":"269","messageId":"270","endLine":23,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":24,"column":17,"nodeType":"278","messageId":"279","endLine":24,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":48,"column":8,"nodeType":"282","endLine":48,"endColumn":22,"suggestions":"283"},{"ruleId":"267","severity":1,"message":"268","line":58,"column":22,"nodeType":"269","messageId":"270","endLine":58,"endColumn":24},{"ruleId":"284","severity":1,"message":"285","line":90,"column":57,"nodeType":"273","endLine":90,"endColumn":127},{"ruleId":"271","severity":1,"message":"272","line":24,"column":17,"nodeType":"273","endLine":24,"endColumn":54},{"ruleId":"271","severity":1,"message":"272","line":27,"column":25,"nodeType":"273","endLine":27,"endColumn":92},{"ruleId":"271","severity":1,"message":"272","line":30,"column":25,"nodeType":"273","endLine":30,"endColumn":88},{"ruleId":"271","severity":1,"message":"272","line":33,"column":25,"nodeType":"273","endLine":33,"endColumn":92},{"ruleId":"271","severity":1,"message":"272","line":36,"column":25,"nodeType":"273","endLine":36,"endColumn":90},{"ruleId":"271","severity":1,"message":"272","line":39,"column":25,"nodeType":"273","endLine":39,"endColumn":91},{"ruleId":"271","severity":1,"message":"272","line":43,"column":25,"nodeType":"273","endLine":43,"endColumn":90},{"ruleId":"271","severity":1,"message":"272","line":46,"column":25,"nodeType":"273","endLine":46,"endColumn":89},{"ruleId":"271","severity":1,"message":"272","line":49,"column":25,"nodeType":"273","endLine":49,"endColumn":90},{"ruleId":"271","severity":1,"message":"272","line":52,"column":25,"nodeType":"273","endLine":52,"endColumn":89},{"ruleId":"267","severity":1,"message":"268","line":27,"column":21,"nodeType":"269","messageId":"270","endLine":27,"endColumn":23},{"ruleId":"280","severity":1,"message":"286","line":50,"column":8,"nodeType":"282","endLine":50,"endColumn":10,"suggestions":"287"},{"ruleId":"280","severity":1,"message":"288","line":28,"column":8,"nodeType":"282","endLine":28,"endColumn":10,"suggestions":"289"},{"ruleId":"284","severity":1,"message":"285","line":41,"column":19,"nodeType":"273","endLine":41,"endColumn":89},{"ruleId":"280","severity":1,"message":"290","line":36,"column":8,"nodeType":"282","endLine":36,"endColumn":10,"suggestions":"291"},{"ruleId":"267","severity":1,"message":"268","line":45,"column":22,"nodeType":"269","messageId":"270","endLine":45,"endColumn":24},{"ruleId":"284","severity":1,"message":"285","line":73,"column":57,"nodeType":"273","endLine":73,"endColumn":166},{"ruleId":"262","severity":1,"message":"292","line":1,"column":31,"nodeType":"264","messageId":"265","endLine":1,"endColumn":37},{"ruleId":"280","severity":1,"message":"293","line":34,"column":8,"nodeType":"282","endLine":34,"endColumn":10,"suggestions":"294"},{"ruleId":"267","severity":1,"message":"268","line":39,"column":26,"nodeType":"269","messageId":"270","endLine":39,"endColumn":28},{"ruleId":"267","severity":1,"message":"268","line":44,"column":24,"nodeType":"269","messageId":"270","endLine":44,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":66,"column":19,"nodeType":"273","endLine":66,"endColumn":89},{"ruleId":"267","severity":1,"message":"268","line":96,"column":22,"nodeType":"269","messageId":"270","endLine":96,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":133,"column":102,"nodeType":"269","messageId":"270","endLine":133,"endColumn":104},{"ruleId":"280","severity":1,"message":"290","line":17,"column":7,"nodeType":"282","endLine":17,"endColumn":9,"suggestions":"295"},{"ruleId":"267","severity":1,"message":"268","line":36,"column":20,"nodeType":"269","messageId":"270","endLine":36,"endColumn":22},{"ruleId":"267","severity":1,"message":"268","line":43,"column":17,"nodeType":"269","messageId":"270","endLine":43,"endColumn":19},{"ruleId":"262","severity":1,"message":"296","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":19},{"ruleId":"280","severity":1,"message":"297","line":30,"column":8,"nodeType":"282","endLine":30,"endColumn":10,"suggestions":"298"},{"ruleId":"267","severity":1,"message":"268","line":43,"column":21,"nodeType":"269","messageId":"270","endLine":43,"endColumn":23},{"ruleId":"280","severity":1,"message":"290","line":20,"column":8,"nodeType":"282","endLine":20,"endColumn":10,"suggestions":"299"},{"ruleId":"267","severity":1,"message":"268","line":32,"column":19,"nodeType":"269","messageId":"270","endLine":32,"endColumn":21},{"ruleId":"280","severity":1,"message":"300","line":27,"column":8,"nodeType":"282","endLine":27,"endColumn":10,"suggestions":"301"},{"ruleId":"284","severity":1,"message":"285","line":58,"column":19,"nodeType":"273","endLine":58,"endColumn":89},{"ruleId":"262","severity":1,"message":"302","line":4,"column":8,"nodeType":"264","messageId":"265","endLine":4,"endColumn":20},{"ruleId":"280","severity":1,"message":"290","line":18,"column":7,"nodeType":"282","endLine":18,"endColumn":9,"suggestions":"303"},{"ruleId":"267","severity":1,"message":"268","line":46,"column":21,"nodeType":"269","messageId":"270","endLine":46,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":70,"column":49,"nodeType":"273","endLine":70,"endColumn":160},{"ruleId":"280","severity":1,"message":"304","line":31,"column":8,"nodeType":"282","endLine":31,"endColumn":10,"suggestions":"305"},{"ruleId":"284","severity":1,"message":"285","line":56,"column":19,"nodeType":"273","endLine":56,"endColumn":89},{"ruleId":"267","severity":1,"message":"268","line":77,"column":21,"nodeType":"269","messageId":"270","endLine":77,"endColumn":23},{"ruleId":"267","severity":1,"message":"268","line":104,"column":94,"nodeType":"269","messageId":"270","endLine":104,"endColumn":96},{"ruleId":"262","severity":1,"message":"306","line":19,"column":32,"nodeType":"264","messageId":"265","endLine":19,"endColumn":42},{"ruleId":"262","severity":1,"message":"307","line":21,"column":29,"nodeType":"264","messageId":"265","endLine":21,"endColumn":47},{"ruleId":"280","severity":1,"message":"300","line":33,"column":8,"nodeType":"282","endLine":33,"endColumn":10,"suggestions":"308"},{"ruleId":"284","severity":1,"message":"285","line":83,"column":19,"nodeType":"273","endLine":83,"endColumn":89},{"ruleId":"267","severity":1,"message":"268","line":17,"column":27,"nodeType":"269","messageId":"270","endLine":17,"endColumn":29},{"ruleId":"267","severity":1,"message":"268","line":17,"column":50,"nodeType":"269","messageId":"270","endLine":17,"endColumn":52},{"ruleId":"280","severity":1,"message":"309","line":22,"column":7,"nodeType":"282","endLine":22,"endColumn":9,"suggestions":"310"},{"ruleId":"267","severity":1,"message":"268","line":49,"column":22,"nodeType":"269","messageId":"270","endLine":49,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":77,"column":65,"nodeType":"273","endLine":77,"endColumn":78},{"ruleId":"284","severity":1,"message":"285","line":84,"column":94,"nodeType":"273","endLine":84,"endColumn":204},{"ruleId":"262","severity":1,"message":"306","line":22,"column":36,"nodeType":"264","messageId":"265","endLine":22,"endColumn":46},{"ruleId":"280","severity":1,"message":"304","line":47,"column":7,"nodeType":"282","endLine":47,"endColumn":9,"suggestions":"311"},{"ruleId":"284","severity":1,"message":"285","line":52,"column":19,"nodeType":"273","endLine":52,"endColumn":89},{"ruleId":"267","severity":1,"message":"268","line":127,"column":21,"nodeType":"269","messageId":"270","endLine":127,"endColumn":23},{"ruleId":"267","severity":1,"message":"268","line":173,"column":94,"nodeType":"269","messageId":"270","endLine":173,"endColumn":96},{"ruleId":"262","severity":1,"message":"296","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":21,"column":22,"nodeType":"269","messageId":"270","endLine":21,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":42,"column":22,"nodeType":"269","messageId":"270","endLine":42,"endColumn":24},{"ruleId":"280","severity":1,"message":"312","line":30,"column":8,"nodeType":"282","endLine":30,"endColumn":10,"suggestions":"313"},{"ruleId":"267","severity":1,"message":"268","line":38,"column":18,"nodeType":"269","messageId":"270","endLine":38,"endColumn":20},{"ruleId":"280","severity":1,"message":"290","line":26,"column":8,"nodeType":"282","endLine":26,"endColumn":10,"suggestions":"314"},{"ruleId":"262","severity":1,"message":"315","line":3,"column":8,"nodeType":"264","messageId":"265","endLine":3,"endColumn":19},{"ruleId":"280","severity":1,"message":"290","line":23,"column":8,"nodeType":"282","endLine":23,"endColumn":10,"suggestions":"316"},{"ruleId":"267","severity":1,"message":"268","line":39,"column":22,"nodeType":"269","messageId":"270","endLine":39,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":66,"column":69,"nodeType":"273","endLine":66,"endColumn":81},{"ruleId":"280","severity":1,"message":"304","line":47,"column":8,"nodeType":"282","endLine":47,"endColumn":10,"suggestions":"317"},{"ruleId":"267","severity":1,"message":"268","line":108,"column":22,"nodeType":"269","messageId":"270","endLine":108,"endColumn":24},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-unused-vars","'HeaderComponent' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'username' is assigned a value but never used.","'password' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMedias'. Either include it or remove the dependency array.","ArrayExpression",["320"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["321"],"React Hook useEffect has missing dependencies: 'getImages' and 'history'. Either include them or remove the dependency array.",["322"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["323"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'getData', 'history', and 'id'. Either include them or remove the dependency array.",["324"],["325"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'getPlaceById' and 'id'. Either include them or remove the dependency array.",["326"],["327"],"React Hook useEffect has missing dependencies: 'getMedias' and 'history'. Either include them or remove the dependency array.",["328"],"'MediaService' is defined but never used.",["329"],"React Hook useEffect has missing dependencies: 'getData' and 'history'. Either include them or remove the dependency array.",["330"],"'categoryId' is assigned a value but never used.","'setMultiCategories' is assigned a value but never used.",["331"],"React Hook useEffect has missing dependencies: 'history', 'user.password', and 'user.username'. Either include them or remove the dependency array.",["332"],["333"],"React Hook useEffect has missing dependencies: 'getRoleById' and 'history'. Either include them or remove the dependency array.",["334"],["335"],"'RoleService' is defined but never used.",["336"],["337"],"no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"344","fix":"348"},{"desc":"349","fix":"350"},{"desc":"344","fix":"351"},{"desc":"352","fix":"353"},{"desc":"344","fix":"354"},{"desc":"355","fix":"356"},{"desc":"352","fix":"357"},{"desc":"358","fix":"359"},{"desc":"355","fix":"360"},{"desc":"361","fix":"362"},{"desc":"344","fix":"363"},{"desc":"344","fix":"364"},{"desc":"355","fix":"365"},"Update the dependencies array to be: [getMedias, selectedFile]",{"range":"366","text":"367"},"Update the dependencies array to be: [user]",{"range":"368","text":"369"},"Update the dependencies array to be: [getImages, history]",{"range":"370","text":"371"},"Update the dependencies array to be: [history]",{"range":"372","text":"373"},"Update the dependencies array to be: [getData, history, id]",{"range":"374","text":"375"},{"range":"376","text":"373"},"Update the dependencies array to be: [getPlaceById, id]",{"range":"377","text":"378"},{"range":"379","text":"373"},"Update the dependencies array to be: [getMedias, history]",{"range":"380","text":"381"},{"range":"382","text":"373"},"Update the dependencies array to be: [getData, history]",{"range":"383","text":"384"},{"range":"385","text":"381"},"Update the dependencies array to be: [history, user.password, user.username]",{"range":"386","text":"387"},{"range":"388","text":"384"},"Update the dependencies array to be: [getRoleById, history]",{"range":"389","text":"390"},{"range":"391","text":"373"},{"range":"392","text":"373"},{"range":"393","text":"384"},[1151,1165],"[getMedias, selectedFile]",[1544,1546],"[user]",[761,763],"[getImages, history]",[1077,1079],"[history]",[1009,1011],"[getData, history, id]",[585,587],[811,813],"[getPlaceById, id]",[631,633],[757,759],"[getMedias, history]",[669,671],[947,949],"[getData, history]",[1064,1066],[686,688],"[history, user.password, user.username]",[1620,1622],[938,940],"[getRoleById, history]",[753,755],[796,798],[1406,1408]]